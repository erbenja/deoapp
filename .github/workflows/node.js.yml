# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 'backend'

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/


    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        # cache-dependency-path: "backend/package-lock.json"
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install wait-for
      run: npm install -g wait-port
    - name: Start Nest.js Backend
      run: |
        cp ormconfig-example.js ormconfig.js
        npm ci
        npm run test
        npm run start &
    #- run: npm run build --if-present
    #- run: npm test
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v2
    #   with:
    #     cache-dependency-path: "frontend/package-lock.json"
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    - name: Start Vue.js Frontend
      working-directory: 'frontend'
      run: |
        npm ci
        npm run serve &
        wait-port 3000
        wait-port 8080
   # - name: Wait for B&F to start
   #   run: sleep 90s
   #   shell: bash
    - name: 'Init DB'
      run: npm run mig:init
    - name: 'Cypress tests'
      working-directory: 'frontend'
      run: npm run cy:run