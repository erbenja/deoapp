
> deo-app-source-code@0.0.1 start /srv/deoapp/deo-app-source-code/backend
> ts-node src/main.ts

[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +124ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mMulterModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mMailerModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mMailerCoreModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:33 AM   [38;5;3m[InstanceLoader] [39m[32mFileModule dependencies initialized[39m[38;5;3m +1ms[39m
query: START TRANSACTION
query: SELECT * FROM current_schema()
query: SELECT TRUE FROM information_schema.columns WHERE table_name = 'pg_class' and column_name = 'relispartition'
query: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'postTag') OR ("table_schema" = 'public' AND "table_name" = 'permissionType') OR ("table_schema" = 'public' AND "table_name" = 'permission') OR ("table_schema" = 'public' AND "table_name" = 'questionOption') OR ("table_schema" = 'public' AND "table_name" = 'questionType') OR ("table_schema" = 'public' AND "table_name" = 'contactPerson') OR ("table_schema" = 'public' AND "table_name" = 'accessCode') OR ("table_schema" = 'public' AND "table_name" = 'contestant') OR ("table_schema" = 'public' AND "table_name" = 'school') OR ("table_schema" = 'public' AND "table_name" = 'district') OR ("table_schema" = 'public' AND "table_name" = 'region') OR ("table_schema" = 'public' AND "table_name" = 'guarantee') OR ("table_schema" = 'public' AND "table_name" = 'roundType') OR ("table_schema" = 'public' AND "table_name" = 'olympiadYear') OR ("table_schema" = 'public' AND "table_name" = 'olympiadRound') OR ("table_schema" = 'public' AND "table_name" = 'category') OR ("table_schema" = 'public' AND "table_name" = 'test') OR ("table_schema" = 'public' AND "table_name" = 'question') OR ("table_schema" = 'public' AND "table_name" = 'answeredQuestion') OR ("table_schema" = 'public' AND "table_name" = 'evaluatedQuestion') OR ("table_schema" = 'public' AND "table_name" = 'account') OR ("table_schema" = 'public' AND "table_name" = 'post') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_regions_region') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_districts_district') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_schools_school') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_round_types_round_type') OR ("table_schema" = 'public' AND "table_name" = 'olympiad_round_guarantees_guarantee')
query: 
            SELECT
                *,
                pg_catalog.col_description(('"' || table_catalog || '"."' || table_schema || '"."' || table_name || '"')::regclass::oid, ordinal_position) as description,
                ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype"
            FROM "information_schema"."columns"
            WHERE
            ("table_schema" = 'public' AND "table_name" = 'postTag') OR ("table_schema" = 'public' AND "table_name" = 'permissionType') OR ("table_schema" = 'public' AND "table_name" = 'permission') OR ("table_schema" = 'public' AND "table_name" = 'questionOption') OR ("table_schema" = 'public' AND "table_name" = 'questionType') OR ("table_schema" = 'public' AND "table_name" = 'contactPerson') OR ("table_schema" = 'public' AND "table_name" = 'accessCode') OR ("table_schema" = 'public' AND "table_name" = 'contestant') OR ("table_schema" = 'public' AND "table_name" = 'school') OR ("table_schema" = 'public' AND "table_name" = 'district') OR ("table_schema" = 'public' AND "table_name" = 'region') OR ("table_schema" = 'public' AND "table_name" = 'guarantee') OR ("table_schema" = 'public' AND "table_name" = 'roundType') OR ("table_schema" = 'public' AND "table_name" = 'olympiadYear') OR ("table_schema" = 'public' AND "table_name" = 'olympiadRound') OR ("table_schema" = 'public' AND "table_name" = 'category') OR ("table_schema" = 'public' AND "table_name" = 'test') OR ("table_schema" = 'public' AND "table_name" = 'question') OR ("table_schema" = 'public' AND "table_name" = 'answeredQuestion') OR ("table_schema" = 'public' AND "table_name" = 'evaluatedQuestion') OR ("table_schema" = 'public' AND "table_name" = 'account') OR ("table_schema" = 'public' AND "table_name" = 'post') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_regions_region') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_districts_district') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_schools_school') OR ("table_schema" = 'public' AND "table_name" = 'guarantee_round_types_round_type') OR ("table_schema" = 'public' AND "table_name" = 'olympiad_round_guarantees_guarantee')
query: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" IN ('r', 'p') AND (("ns"."nspname" = 'public' AND "t"."relname" = 'postTag') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'permissionType') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'permission') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'questionOption') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'questionType') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'contactPerson') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'accessCode') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'contestant') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'school') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'district') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'region') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'roundType') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'olympiadYear') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'olympiadRound') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'category') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'test') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'question') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'answeredQuestion') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'evaluatedQuestion') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'account') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'post') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_regions_region') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_districts_district') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_schools_school') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_round_types_round_type') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'olympiad_round_guarantees_guarantee'))
query: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" IN ('r', 'p') AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'postTag') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'permissionType') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'permission') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'questionOption') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'questionType') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'contactPerson') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'accessCode') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'contestant') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'school') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'district') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'region') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'roundType') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'olympiadYear') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'olympiadRound') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'category') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'test') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'question') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'answeredQuestion') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'evaluatedQuestion') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'account') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'post') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_regions_region') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_districts_district') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_schools_school') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'guarantee_round_types_round_type') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'olympiad_round_guarantees_guarantee'))
query: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'postTag') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'permissionType') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'permission') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'questionOption') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'questionType') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'contactPerson') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'accessCode') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'contestant') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'school') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'district') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'region') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'guarantee') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'roundType') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'olympiadYear') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'olympiadRound') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'category') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'test') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'question') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'answeredQuestion') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'evaluatedQuestion') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'account') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'post') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'guarantee_regions_region') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'guarantee_districts_district') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'guarantee_schools_school') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'guarantee_round_types_round_type') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'olympiad_round_guarantees_guarantee')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid"  AND "cl"."relispartition" = 'f'INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
query: SELECT "e"."enumlabel" AS "value" FROM "pg_enum" "e" INNER JOIN "pg_type" "t" ON "t"."oid" = "e"."enumtypid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" = 'public' AND "t"."typname" = 'permissionType_name_enum'
query: SELECT "e"."enumlabel" AS "value" FROM "pg_enum" "e" INNER JOIN "pg_type" "t" ON "t"."oid" = "e"."enumtypid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" = 'public' AND "t"."typname" = 'questionType_type_enum'
query: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
query: COMMENT ON COLUMN "accessCode"."activated" IS NULL
query: ALTER TABLE "accessCode" ALTER COLUMN "activated" SET DEFAULT null
query: COMMENT ON COLUMN "accessCode"."testStart" IS NULL
query: ALTER TABLE "accessCode" ALTER COLUMN "testStart" SET DEFAULT null
query: COMMENT ON COLUMN "accessCode"."evaluated" IS NULL
query: ALTER TABLE "accessCode" ALTER COLUMN "evaluated" SET DEFAULT null
query: COMMIT
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmCoreModule dependencies initialized[39m[38;5;3m +1105ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTypeOrmModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mPermissionTypeModule dependencies initialized[39m[38;5;3m +6ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mPostTagModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mQuestionTypeModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mRoundTypeModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mContactPersonModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mCategoryModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mEvaluatedQuestionModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mQuestionOptionModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mPermissionModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mPostModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mSchoolModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mGuaranteeModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mAnsweredQuestionModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mTestModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mContestantModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mDistrictModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mOlympiadRoundModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mOlympiadYearModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mRegionModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mQuestionModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mAccountModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mAccessCodeModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:34 AM   [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mAppController {/help}:[39m[38;5;3m +299ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mAccessCodeController {/api/accesscodes}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/startTest, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/getTest, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/activate, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/answers, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/evaluations, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/evaluated, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/closeevaluation, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mAnsweredQuestionController {/api/answeredquestions}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/evaluatedquestions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mEvaluatedQuestionController {/api/evaluatedquestions}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mTestController {/api/tests}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/example, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/questions, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/questions, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/questionsOrder, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mQuestionController {/api/questions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/questionoptions, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:qid/questionoptions/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/questionoptions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/answeredquestions, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/answeredquestions, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mQuestionOptionController {/api/questionoptions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mAccountController {/api/accounts}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/permissions, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/guarantees, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mGuaranteeController {/api/guarantees}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/contestants, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/contestants, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contestants, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mContestantController {/api/contestants}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:cid/olympiadrounds/:rid/accesscode, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mPermissionController {/api/permissions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mFileController {/api/files}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/upload, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:imgpath, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mAuthController {/api/auth}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/login, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/accessCode, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mCategoryController {/api/categories}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mContactPersonController {/api/contactpersons}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mDistrictController {/api/districts}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/schools, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contactpersons, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contactpersons, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mSchoolController {/api/schools}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contactpersons, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contactpersons, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mOlympiadRoundController {/api/olympiadrounds}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/tests, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contestants, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mOlympiadYearController {/api/olympiadyears}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/olympiadrounds, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/olympiadrounds, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contestants, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contestants, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mPermissionTypeController {/api/permissiontypes}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mPostController {/api/posts}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +8ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mPostTagController {/api/posttags}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mQuestionTypeController {/api/questiontypes}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mRegionController {/api/regions}:[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/districts, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contactpersons, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id/contactpersons, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RoutesResolver] [39m[32mRoundTypeController {/api/roundtypes}:[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/:id, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[RouterExplorer] [39m[32mMapped {/, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 20073   - [39m12/20/2020, 2:53:35 AM   [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +7ms[39m
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 5,
      orderNum: 7,
      img: null,
      lastModified: 2020-09-25T08:01:53.810Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 5,
      orderNum: 7,
      img: null,
      lastModified: 2020-09-25T08:01:53.810Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 5,
      orderNum: 7,
      img: null,
      lastModified: 2020-09-25T08:01:53.810Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 5,
      orderNum: 7,
      img: null,
      lastModified: 2020-09-25T08:01:53.810Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
LocalStrategy
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."username" = $1 LIMIT 1 -- PARAMETERS: ["admin"]
LocalStrategy
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."username" = $1 LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."username" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."username" = $1 ) AND ( "AccountEntity"."id" IN (1) ) -- PARAMETERS: ["admin"]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 5,
      orderNum: 7,
      img: null,
      lastModified: 2020-09-25T08:01:53.810Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [13]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [13]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [13]
query: START TRANSACTION
query: UPDATE "question" SET "points" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [13,3,"2021-02-28T16:02:39.072Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [13]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (13) ) -- PARAMETERS: [13]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 3,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:39.072Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [13]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [13]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [13]
query: START TRANSACTION
query: UPDATE "question" SET "points" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [13,1,"2021-02-28T16:02:41.221Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [13]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (13) ) -- PARAMETERS: [13]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 1,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:41.221Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [13]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [13]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [13]
query: START TRANSACTION
query: UPDATE "question" SET "points" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [13,6,"2021-02-28T16:02:43.495Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [13]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (13) ) -- PARAMETERS: [13]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'creator' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
[31m[Nest] 20073   - [39m02/28/2021, 4:02:46 PM   [38;5;3m[ExceptionsHandler] [39m[31mCannot read property 'originalname' of undefined[39m[38;5;3m +6095350785ms[39m
TypeError: Cannot read property 'originalname' of undefined
    at FileController.uploadFile (/srv/deoapp/deo-app-source-code/backend/src/file/file.controller.ts:27:32)
    at /srv/deoapp/deo-app-source-code/backend/node_modules/@nestjs/core/router/router-execution-context.js:37:29
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'creator' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
[31m[Nest] 20073   - [39m02/28/2021, 4:02:47 PM   [38;5;3m[ExceptionsHandler] [39m[31mCannot read property 'originalname' of undefined[39m[38;5;3m +1298ms[39m
TypeError: Cannot read property 'originalname' of undefined
    at FileController.uploadFile (/srv/deoapp/deo-app-source-code/backend/src/file/file.controller.ts:27:32)
    at /srv/deoapp/deo-app-source-code/backend/node_modules/@nestjs/core/router/router-execution-context.js:37:29
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'creator' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
[31m[Nest] 20073   - [39m02/28/2021, 4:02:56 PM   [38;5;3m[ExceptionsHandler] [39m[31mOnly image files are allowed![39m[38;5;3m +8819ms[39m
Error: Only image files are allowed!
    at exports.imageFileFilter (/srv/deoapp/deo-app-source-code/backend/src/file-upload.utils.ts:5:25)
    at wrappedFileFilter (/srv/deoapp/deo-app-source-code/backend/node_modules/multer/index.js:44:7)
    at Busboy.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/multer/lib/make-middleware.js:114:7)
    at Busboy.emit (events.js:315:20)
    at Busboy.EventEmitter.emit (domain.js:483:12)
    at Busboy.emit (/srv/deoapp/deo-app-source-code/backend/node_modules/busboy/lib/main.js:38:33)
    at PartStream.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/busboy/lib/types/multipart.js:213:13)
    at PartStream.emit (events.js:315:20)
    at PartStream.EventEmitter.emit (domain.js:483:12)
    at HeaderParser.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/dicer/lib/Dicer.js:51:16)
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'creator' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
[31m[Nest] 20073   - [39m02/28/2021, 4:03:05 PM   [38;5;3m[ExceptionsHandler] [39m[31mOnly image files are allowed![39m[38;5;3m +8996ms[39m
Error: Only image files are allowed!
    at exports.imageFileFilter (/srv/deoapp/deo-app-source-code/backend/src/file-upload.utils.ts:5:25)
    at wrappedFileFilter (/srv/deoapp/deo-app-source-code/backend/node_modules/multer/index.js:44:7)
    at Busboy.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/multer/lib/make-middleware.js:114:7)
    at Busboy.emit (events.js:315:20)
    at Busboy.EventEmitter.emit (domain.js:483:12)
    at Busboy.emit (/srv/deoapp/deo-app-source-code/backend/node_modules/busboy/lib/main.js:38:33)
    at PartStream.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/busboy/lib/types/multipart.js:213:13)
    at PartStream.emit (events.js:315:20)
    at PartStream.EventEmitter.emit (domain.js:483:12)
    at HeaderParser.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/dicer/lib/Dicer.js:51:16)
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'creator' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
[31m[Nest] 20073   - [39m02/28/2021, 4:03:15 PM   [38;5;3m[ExceptionsHandler] [39m[31mCannot read property 'originalname' of undefined[39m[38;5;3m +10246ms[39m
TypeError: Cannot read property 'originalname' of undefined
    at FileController.uploadFile (/srv/deoapp/deo-app-source-code/backend/src/file/file.controller.ts:27:32)
    at /srv/deoapp/deo-app-source-code/backend/node_modules/@nestjs/core/router/router-execution-context.js:37:29
    at runMicrotasks (<anonymous>)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'creator' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
[31m[Nest] 20073   - [39m02/28/2021, 4:03:25 PM   [38;5;3m[ExceptionsHandler] [39m[31mOnly image files are allowed![39m[38;5;3m +9912ms[39m
Error: Only image files are allowed!
    at exports.imageFileFilter (/srv/deoapp/deo-app-source-code/backend/src/file-upload.utils.ts:5:25)
    at wrappedFileFilter (/srv/deoapp/deo-app-source-code/backend/node_modules/multer/index.js:44:7)
    at Busboy.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/multer/lib/make-middleware.js:114:7)
    at Busboy.emit (events.js:315:20)
    at Busboy.EventEmitter.emit (domain.js:483:12)
    at Busboy.emit (/srv/deoapp/deo-app-source-code/backend/node_modules/busboy/lib/main.js:38:33)
    at PartStream.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/busboy/lib/types/multipart.js:213:13)
    at PartStream.emit (events.js:315:20)
    at PartStream.EventEmitter.emit (domain.js:483:12)
    at HeaderParser.<anonymous> (/srv/deoapp/deo-app-source-code/backend/node_modules/dicer/lib/Dicer.js:51:16)
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
LocalStrategy
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."username" = $1 LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."username" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."username" = $1 ) AND ( "AccountEntity"."id" IN (1) ) -- PARAMETERS: ["admin"]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId"
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'guarantee', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
1
----------------------------------------------------------------
query: SELECT DISTINCT "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "district"."id" AS "district_id", "district"."name" AS "district_name", "district"."regionId" AS "district_regionId", "district"."contactPersonId" AS "district_contactPersonId", "region"."id" AS "region_id", "region"."name" AS "region_name", "region"."contactPersonId" AS "region_contactPersonId", "accessCode"."id" AS "accessCode_id", "accessCode"."code" AS "accessCode_code", "accessCode"."activated" AS "accessCode_activated", "accessCode"."testStart" AS "accessCode_testStart", "accessCode"."evaluated" AS "accessCode_evaluated", "accessCode"."contestantId" AS "accessCode_contestantId", "accessCode"."roundId" AS "accessCode_roundId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "type"."id" AS "type_id", "type"."name" AS "type_name" FROM "contestant" "contestant" LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "guarantee_schools_school" "schoolG_school" ON "schoolG_school"."schoolId"="school"."id" LEFT JOIN "guarantee" "schoolG" ON "schoolG"."id"="schoolG_school"."guaranteeId"  LEFT JOIN "district" "district" ON "district"."id"="school"."districtId"  LEFT JOIN "guarantee_districts_district" "districtG_district" ON "districtG_district"."districtId"="district"."id" LEFT JOIN "guarantee" "districtG" ON "districtG"."id"="districtG_district"."guaranteeId"  LEFT JOIN "region" "region" ON "region"."id"="district"."regionId"  LEFT JOIN "guarantee_regions_region" "regionG_region" ON "regionG_region"."regionId"="region"."id" LEFT JOIN "guarantee" "regionG" ON "regionG"."id"="regionG_region"."guaranteeId"  LEFT JOIN "accessCode" "accessCode" ON "accessCode"."contestantId"="contestant"."id"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="accessCode"."roundId"  LEFT JOIN "roundType" "type" ON "type"."id"="round"."typeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "round_roundG" ON "round_roundG"."olympiadRoundId"="round"."id" LEFT JOIN "guarantee" "roundG" ON "roundG"."id"="round_roundG"."guaranteeId"  LEFT JOIN "guarantee_round_types_round_type" "typeG_type" ON "typeG_type"."roundTypeId"="type"."id" LEFT JOIN "guarantee" "typeG" ON "typeG"."id"="typeG_type"."guaranteeId" WHERE "schoolG"."id" = $1 OR "districtG"."id" = $2 OR "regionG"."id" = $3 OR "roundG"."id" = $4 OR "typeG"."id" = $5 -- PARAMETERS: [1,1,1,1,1]
[
  ContestantEntity {
    id: 1,
    firstname: 'Dan',
    surname: 'Novotný',
    email: 'novy@seznam.cz',
    birthdate: '2006-06-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 2,
    firstname: 'Petra',
    surname: 'Nová',
    email: 'nova@email.com',
    birthdate: '2008-05-14',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 3,
    firstname: 'Adam',
    surname: 'Pavel',
    email: 'pavel@seznam.cz',
    birthdate: '2008-05-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  }
]
query: SELECT DISTINCT "distinctAlias"."ContestantEntity_id" as "ids_ContestantEntity_id" FROM (SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE "ContestantEntity"."id" = $1) "distinctAlias"  ORDER BY "ContestantEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE ( "ContestantEntity"."id" = $1 ) AND ( "ContestantEntity"."id" IN (1) ) -- PARAMETERS: [1]
ContestantEntity {
  id: 1,
  firstname: 'Dan',
  surname: 'Novotný',
  email: 'novy@seznam.cz',
  birthdate: '2006-06-07',
  classNum: 2,
  school: SchoolEntity {
    id: 2,
    name: 'ZS Liberec',
    district: DistrictEntity { id: 2, name: 'Liberec', region: [RegionEntity] }
  },
  accessCodes: [
    AccessCodeEntity {
      id: 1,
      code: 'DgmDRgHGlo',
      activated: 2020-08-28T08:31:50.733Z,
      testStart: 2020-08-28T09:00:38.079Z,
      evaluated: 2020-09-03T08:14:10.166Z,
      contestant: [ContestantEntity],
      round: [OlympiadRoundEntity]
    }
  ]
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'guarantee', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
1
----------------------------------------------------------------
query: SELECT DISTINCT "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "district"."id" AS "district_id", "district"."name" AS "district_name", "district"."regionId" AS "district_regionId", "district"."contactPersonId" AS "district_contactPersonId", "region"."id" AS "region_id", "region"."name" AS "region_name", "region"."contactPersonId" AS "region_contactPersonId", "accessCode"."id" AS "accessCode_id", "accessCode"."code" AS "accessCode_code", "accessCode"."activated" AS "accessCode_activated", "accessCode"."testStart" AS "accessCode_testStart", "accessCode"."evaluated" AS "accessCode_evaluated", "accessCode"."contestantId" AS "accessCode_contestantId", "accessCode"."roundId" AS "accessCode_roundId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "type"."id" AS "type_id", "type"."name" AS "type_name" FROM "contestant" "contestant" LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "guarantee_schools_school" "schoolG_school" ON "schoolG_school"."schoolId"="school"."id" LEFT JOIN "guarantee" "schoolG" ON "schoolG"."id"="schoolG_school"."guaranteeId"  LEFT JOIN "district" "district" ON "district"."id"="school"."districtId"  LEFT JOIN "guarantee_districts_district" "districtG_district" ON "districtG_district"."districtId"="district"."id" LEFT JOIN "guarantee" "districtG" ON "districtG"."id"="districtG_district"."guaranteeId"  LEFT JOIN "region" "region" ON "region"."id"="district"."regionId"  LEFT JOIN "guarantee_regions_region" "regionG_region" ON "regionG_region"."regionId"="region"."id" LEFT JOIN "guarantee" "regionG" ON "regionG"."id"="regionG_region"."guaranteeId"  LEFT JOIN "accessCode" "accessCode" ON "accessCode"."contestantId"="contestant"."id"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="accessCode"."roundId"  LEFT JOIN "roundType" "type" ON "type"."id"="round"."typeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "round_roundG" ON "round_roundG"."olympiadRoundId"="round"."id" LEFT JOIN "guarantee" "roundG" ON "roundG"."id"="round_roundG"."guaranteeId"  LEFT JOIN "guarantee_round_types_round_type" "typeG_type" ON "typeG_type"."roundTypeId"="type"."id" LEFT JOIN "guarantee" "typeG" ON "typeG"."id"="typeG_type"."guaranteeId" WHERE "schoolG"."id" = $1 OR "districtG"."id" = $2 OR "regionG"."id" = $3 OR "roundG"."id" = $4 OR "typeG"."id" = $5 -- PARAMETERS: [1,1,1,1,1]
[
  ContestantEntity {
    id: 1,
    firstname: 'Dan',
    surname: 'Novotný',
    email: 'novy@seznam.cz',
    birthdate: '2006-06-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 2,
    firstname: 'Petra',
    surname: 'Nová',
    email: 'nova@email.com',
    birthdate: '2008-05-14',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 3,
    firstname: 'Adam',
    surname: 'Pavel',
    email: 'pavel@seznam.cz',
    birthdate: '2008-05-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  }
]
query: SELECT DISTINCT "distinctAlias"."ContestantEntity_id" as "ids_ContestantEntity_id" FROM (SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE "ContestantEntity"."id" = $1) "distinctAlias"  ORDER BY "ContestantEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE ( "ContestantEntity"."id" = $1 ) AND ( "ContestantEntity"."id" IN (3) ) -- PARAMETERS: [3]
ContestantEntity {
  id: 3,
  firstname: 'Adam',
  surname: 'Pavel',
  email: 'pavel@seznam.cz',
  birthdate: '2008-05-07',
  classNum: 2,
  school: SchoolEntity {
    id: 2,
    name: 'ZS Liberec',
    district: DistrictEntity { id: 2, name: 'Liberec', region: [RegionEntity] }
  },
  accessCodes: [
    AccessCodeEntity {
      id: 3,
      code: 'jEorvjiiXd',
      activated: 2020-09-03T09:19:47.657Z,
      testStart: 2020-09-13T18:27:22.967Z,
      evaluated: 2020-09-24T17:15:36.660Z,
      contestant: [ContestantEntity],
      round: [OlympiadRoundEntity]
    }
  ]
}
query: SELECT "answers"."id" AS "answers_id", "answers"."answer" AS "answers_answer", "answers"."lastModified" AS "answers_lastModified", "answers"."created" AS "answers_created", "answers"."accessCodeId" AS "answers_accessCodeId", "answers"."questionId" AS "answers_questionId", "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "options"."id" AS "options_id", "options"."content" AS "options_content", "options"."img" AS "options_img", "options"."correct" AS "options_correct", "options"."questionId" AS "options_questionId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "type"."id" AS "type_id", "type"."type" AS "type_type", "type"."serverEvaluation" AS "type_serverEvaluation" FROM "answeredQuestion" "answers" LEFT JOIN "accessCode" "code" ON "code"."id"="answers"."accessCodeId"  LEFT JOIN "question" "question" ON "question"."id"="answers"."questionId"  LEFT JOIN "questionOption" "options" ON "options"."questionId"="question"."id"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answers"."id"  LEFT JOIN "questionType" "type" ON "type"."id"="question"."typeId" WHERE "code"."id" = $1 -- PARAMETERS: [3]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'guarantee', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
1
----------------------------------------------------------------
query: SELECT DISTINCT "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "district"."id" AS "district_id", "district"."name" AS "district_name", "district"."regionId" AS "district_regionId", "district"."contactPersonId" AS "district_contactPersonId", "region"."id" AS "region_id", "region"."name" AS "region_name", "region"."contactPersonId" AS "region_contactPersonId", "accessCode"."id" AS "accessCode_id", "accessCode"."code" AS "accessCode_code", "accessCode"."activated" AS "accessCode_activated", "accessCode"."testStart" AS "accessCode_testStart", "accessCode"."evaluated" AS "accessCode_evaluated", "accessCode"."contestantId" AS "accessCode_contestantId", "accessCode"."roundId" AS "accessCode_roundId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "type"."id" AS "type_id", "type"."name" AS "type_name" FROM "contestant" "contestant" LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "guarantee_schools_school" "schoolG_school" ON "schoolG_school"."schoolId"="school"."id" LEFT JOIN "guarantee" "schoolG" ON "schoolG"."id"="schoolG_school"."guaranteeId"  LEFT JOIN "district" "district" ON "district"."id"="school"."districtId"  LEFT JOIN "guarantee_districts_district" "districtG_district" ON "districtG_district"."districtId"="district"."id" LEFT JOIN "guarantee" "districtG" ON "districtG"."id"="districtG_district"."guaranteeId"  LEFT JOIN "region" "region" ON "region"."id"="district"."regionId"  LEFT JOIN "guarantee_regions_region" "regionG_region" ON "regionG_region"."regionId"="region"."id" LEFT JOIN "guarantee" "regionG" ON "regionG"."id"="regionG_region"."guaranteeId"  LEFT JOIN "accessCode" "accessCode" ON "accessCode"."contestantId"="contestant"."id"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="accessCode"."roundId"  LEFT JOIN "roundType" "type" ON "type"."id"="round"."typeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "round_roundG" ON "round_roundG"."olympiadRoundId"="round"."id" LEFT JOIN "guarantee" "roundG" ON "roundG"."id"="round_roundG"."guaranteeId"  LEFT JOIN "guarantee_round_types_round_type" "typeG_type" ON "typeG_type"."roundTypeId"="type"."id" LEFT JOIN "guarantee" "typeG" ON "typeG"."id"="typeG_type"."guaranteeId" WHERE "schoolG"."id" = $1 OR "districtG"."id" = $2 OR "regionG"."id" = $3 OR "roundG"."id" = $4 OR "typeG"."id" = $5 -- PARAMETERS: [1,1,1,1,1]
[
  ContestantEntity {
    id: 1,
    firstname: 'Dan',
    surname: 'Novotný',
    email: 'novy@seznam.cz',
    birthdate: '2006-06-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 2,
    firstname: 'Petra',
    surname: 'Nová',
    email: 'nova@email.com',
    birthdate: '2008-05-14',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 3,
    firstname: 'Adam',
    surname: 'Pavel',
    email: 'pavel@seznam.cz',
    birthdate: '2008-05-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  }
]
query: SELECT DISTINCT "distinctAlias"."ContestantEntity_id" as "ids_ContestantEntity_id" FROM (SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE "ContestantEntity"."id" = $1) "distinctAlias"  ORDER BY "ContestantEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE ( "ContestantEntity"."id" = $1 ) AND ( "ContestantEntity"."id" IN (3) ) -- PARAMETERS: [3]
ContestantEntity {
  id: 3,
  firstname: 'Adam',
  surname: 'Pavel',
  email: 'pavel@seznam.cz',
  birthdate: '2008-05-07',
  classNum: 2,
  school: SchoolEntity {
    id: 2,
    name: 'ZS Liberec',
    district: DistrictEntity { id: 2, name: 'Liberec', region: [RegionEntity] }
  },
  accessCodes: [
    AccessCodeEntity {
      id: 3,
      code: 'jEorvjiiXd',
      activated: 2020-09-03T09:19:47.657Z,
      testStart: 2020-09-13T18:27:22.967Z,
      evaluated: 2020-09-24T17:15:36.660Z,
      contestant: [ContestantEntity],
      round: [OlympiadRoundEntity]
    }
  ]
}
query: SELECT "answers"."id" AS "answers_id", "answers"."answer" AS "answers_answer", "answers"."lastModified" AS "answers_lastModified", "answers"."created" AS "answers_created", "answers"."accessCodeId" AS "answers_accessCodeId", "answers"."questionId" AS "answers_questionId", "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "options"."id" AS "options_id", "options"."content" AS "options_content", "options"."img" AS "options_img", "options"."correct" AS "options_correct", "options"."questionId" AS "options_questionId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "type"."id" AS "type_id", "type"."type" AS "type_type", "type"."serverEvaluation" AS "type_serverEvaluation" FROM "answeredQuestion" "answers" LEFT JOIN "accessCode" "code" ON "code"."id"="answers"."accessCodeId"  LEFT JOIN "question" "question" ON "question"."id"="answers"."questionId"  LEFT JOIN "questionOption" "options" ON "options"."questionId"="question"."id"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answers"."id"  LEFT JOIN "questionType" "type" ON "type"."id"="question"."typeId" WHERE "code"."id" = $1 -- PARAMETERS: [3]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'guarantee', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
1
----------------------------------------------------------------
query: SELECT DISTINCT "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "district"."id" AS "district_id", "district"."name" AS "district_name", "district"."regionId" AS "district_regionId", "district"."contactPersonId" AS "district_contactPersonId", "region"."id" AS "region_id", "region"."name" AS "region_name", "region"."contactPersonId" AS "region_contactPersonId", "accessCode"."id" AS "accessCode_id", "accessCode"."code" AS "accessCode_code", "accessCode"."activated" AS "accessCode_activated", "accessCode"."testStart" AS "accessCode_testStart", "accessCode"."evaluated" AS "accessCode_evaluated", "accessCode"."contestantId" AS "accessCode_contestantId", "accessCode"."roundId" AS "accessCode_roundId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "type"."id" AS "type_id", "type"."name" AS "type_name" FROM "contestant" "contestant" LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "guarantee_schools_school" "schoolG_school" ON "schoolG_school"."schoolId"="school"."id" LEFT JOIN "guarantee" "schoolG" ON "schoolG"."id"="schoolG_school"."guaranteeId"  LEFT JOIN "district" "district" ON "district"."id"="school"."districtId"  LEFT JOIN "guarantee_districts_district" "districtG_district" ON "districtG_district"."districtId"="district"."id" LEFT JOIN "guarantee" "districtG" ON "districtG"."id"="districtG_district"."guaranteeId"  LEFT JOIN "region" "region" ON "region"."id"="district"."regionId"  LEFT JOIN "guarantee_regions_region" "regionG_region" ON "regionG_region"."regionId"="region"."id" LEFT JOIN "guarantee" "regionG" ON "regionG"."id"="regionG_region"."guaranteeId"  LEFT JOIN "accessCode" "accessCode" ON "accessCode"."contestantId"="contestant"."id"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="accessCode"."roundId"  LEFT JOIN "roundType" "type" ON "type"."id"="round"."typeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "round_roundG" ON "round_roundG"."olympiadRoundId"="round"."id" LEFT JOIN "guarantee" "roundG" ON "roundG"."id"="round_roundG"."guaranteeId"  LEFT JOIN "guarantee_round_types_round_type" "typeG_type" ON "typeG_type"."roundTypeId"="type"."id" LEFT JOIN "guarantee" "typeG" ON "typeG"."id"="typeG_type"."guaranteeId" WHERE "schoolG"."id" = $1 OR "districtG"."id" = $2 OR "regionG"."id" = $3 OR "roundG"."id" = $4 OR "typeG"."id" = $5 -- PARAMETERS: [1,1,1,1,1]
[
  ContestantEntity {
    id: 1,
    firstname: 'Dan',
    surname: 'Novotný',
    email: 'novy@seznam.cz',
    birthdate: '2006-06-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 2,
    firstname: 'Petra',
    surname: 'Nová',
    email: 'nova@email.com',
    birthdate: '2008-05-14',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 3,
    firstname: 'Adam',
    surname: 'Pavel',
    email: 'pavel@seznam.cz',
    birthdate: '2008-05-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  }
]
query: SELECT DISTINCT "distinctAlias"."ContestantEntity_id" as "ids_ContestantEntity_id" FROM (SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE "ContestantEntity"."id" = $1) "distinctAlias"  ORDER BY "ContestantEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE ( "ContestantEntity"."id" = $1 ) AND ( "ContestantEntity"."id" IN (1) ) -- PARAMETERS: [1]
ContestantEntity {
  id: 1,
  firstname: 'Dan',
  surname: 'Novotný',
  email: 'novy@seznam.cz',
  birthdate: '2006-06-07',
  classNum: 2,
  school: SchoolEntity {
    id: 2,
    name: 'ZS Liberec',
    district: DistrictEntity { id: 2, name: 'Liberec', region: [RegionEntity] }
  },
  accessCodes: [
    AccessCodeEntity {
      id: 1,
      code: 'DgmDRgHGlo',
      activated: 2020-08-28T08:31:50.733Z,
      testStart: 2020-08-28T09:00:38.079Z,
      evaluated: 2020-09-03T08:14:10.166Z,
      contestant: [ContestantEntity],
      round: [OlympiadRoundEntity]
    }
  ]
}
query: SELECT "answers"."id" AS "answers_id", "answers"."answer" AS "answers_answer", "answers"."lastModified" AS "answers_lastModified", "answers"."created" AS "answers_created", "answers"."accessCodeId" AS "answers_accessCodeId", "answers"."questionId" AS "answers_questionId", "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "options"."id" AS "options_id", "options"."content" AS "options_content", "options"."img" AS "options_img", "options"."correct" AS "options_correct", "options"."questionId" AS "options_questionId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "type"."id" AS "type_id", "type"."type" AS "type_type", "type"."serverEvaluation" AS "type_serverEvaluation" FROM "answeredQuestion" "answers" LEFT JOIN "accessCode" "code" ON "code"."id"="answers"."accessCodeId"  LEFT JOIN "question" "question" ON "question"."id"="answers"."questionId"  LEFT JOIN "questionOption" "options" ON "options"."questionId"="question"."id"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answers"."id"  LEFT JOIN "questionType" "type" ON "type"."id"="question"."typeId" WHERE "code"."id" = $1 -- PARAMETERS: [1]
query: SELECT "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId" FROM "accessCode" "code" WHERE "code"."activated" IS NOT null AND "code"."testStart" IS NOT null AND "code"."evaluated" IS null
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."PostEntity_id" as "ids_PostEntity_id" FROM (SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE "PostEntity"."id" = $1) "distinctAlias"  ORDER BY "PostEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE ( "PostEntity"."id" = $1 ) AND ( "PostEntity"."id" IN (1) ) -- PARAMETERS: [1]
PostEntity {
  id: 1,
  title: 'Úvodní slovo k olympiádě',
  content: 'Dějepisná olympiáda (DĚO) je soutěž vycházející z obsahu vzdělávacího oboru dějepis v rámcových vzdělávacích programech a organizovaná jako cílevědomá vzdělávací aktivita založená na systematické práci s talentovanými žáky zejména 8. a 9. ročníků základních škol, 3. a 4. ročníků osmiletých gymnázií, 1. a 2. ročníků šestiletých gymnázií.\n' +
    '\n' +
    'Dějepisná olympiáda je postupovou soutěží, má 1 kategorii a člení se podle soutěžních kol (školní, okresní, krajské a celostátní). Soutěž je jednotná pro celé území České republiky a pořádá se každoročně. Každý ročník má jiné tematické zaměření, jednotné pro všechna postupová kola, jež se liší jen svou náročností. Zadání pro jednotlivá kola vytváří ústřední komise DĚO. \n' +
    '<br>\n' +
    'zdroj: http://vtp.talentovani.cz/dejepisna-olympiada',
  active: 0,
  lastModified: 2020-08-12T12:36:24.884Z,
  created: 2020-08-12T12:36:24.884Z,
  author: AccountEntity {
    id: 1,
    username: 'admin',
    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',
    email: 'email@seznam.cz',
    firstname: 'admin1',
    surname: 'admin2'
  }
}
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId"
query: SELECT "RoundTypeEntity"."id" AS "RoundTypeEntity_id", "RoundTypeEntity"."name" AS "RoundTypeEntity_name" FROM "roundType" "RoundTypeEntity"
query: SELECT DISTINCT "distinctAlias"."OlympiadYearEntity_id" as "ids_OlympiadYearEntity_id" FROM (SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId" WHERE "OlympiadYearEntity"."id" = $1) "distinctAlias"  ORDER BY "OlympiadYearEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId" WHERE ( "OlympiadYearEntity"."id" = $1 ) AND ( "OlympiadYearEntity"."id" IN (1) ) -- PARAMETERS: [1]
OlympiadYearEntity {
  id: 1,
  name: 'Dlouhé století se loučí',
  year: 2019,
  description: '1880-1920',
  openToPublic: true,
  registrationDeadline: '2020-10-16',
  rounds: [
    OlympiadRoundEntity {
      id: 1,
      roundStart: '2020-12-12',
      roundEnd: '2021-06-16',
      type: [RoundTypeEntity],
      nextRound: null
    }
  ]
}
query: SELECT "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "year"."id" AS "year_id", "year"."name" AS "year_name", "year"."year" AS "year_year", "year"."description" AS "year_description", "year"."openToPublic" AS "year_openToPublic", "year"."registrationDeadline" AS "year_registrationDeadline", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "answeredQuestions"."id" AS "answeredQuestions_id", "answeredQuestions"."answer" AS "answeredQuestions_answer", "answeredQuestions"."lastModified" AS "answeredQuestions_lastModified", "answeredQuestions"."created" AS "answeredQuestions_created", "answeredQuestions"."accessCodeId" AS "answeredQuestions_accessCodeId", "answeredQuestions"."questionId" AS "answeredQuestions_questionId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "test"."id" AS "test_id", "test"."timeLimit" AS "test_timeLimit", "test"."closed" AS "test_closed", "test"."lastModified" AS "test_lastModified", "test"."created" AS "test_created", "test"."roundId" AS "test_roundId", "test"."categoryId" AS "test_categoryId", "category"."id" AS "category_id", "category"."name" AS "category_name", "category"."classMin" AS "category_classMin", "category"."classMax" AS "category_classMax" FROM "accessCode" "code" LEFT JOIN "contestant" "contestant" ON "contestant"."id"="code"."contestantId"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="code"."roundId"  LEFT JOIN "olympiadYear" "year" ON "year"."id"="round"."yearId"  LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "answeredQuestion" "answeredQuestions" ON "answeredQuestions"."accessCodeId"="code"."id"  LEFT JOIN "question" "question" ON "question"."id"="answeredQuestions"."questionId"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answeredQuestions"."id"  LEFT JOIN "test" "test" ON "test"."id"="question"."testId"  LEFT JOIN "category" "category" ON "category"."id"="test"."categoryId" WHERE "code"."activated" IS NOT null AND "code"."testStart" IS NOT null AND "code"."evaluated" IS NOT null
query: SELECT "answers"."id" AS "answers_id", "answers"."answer" AS "answers_answer", "answers"."lastModified" AS "answers_lastModified", "answers"."created" AS "answers_created", "answers"."accessCodeId" AS "answers_accessCodeId", "answers"."questionId" AS "answers_questionId", "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "options"."id" AS "options_id", "options"."content" AS "options_content", "options"."img" AS "options_img", "options"."correct" AS "options_correct", "options"."questionId" AS "options_questionId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "type"."id" AS "type_id", "type"."type" AS "type_type", "type"."serverEvaluation" AS "type_serverEvaluation" FROM "answeredQuestion" "answers" LEFT JOIN "accessCode" "code" ON "code"."id"="answers"."accessCodeId"  LEFT JOIN "question" "question" ON "question"."id"="answers"."questionId"  LEFT JOIN "questionOption" "options" ON "options"."questionId"="question"."id"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answers"."id"  LEFT JOIN "questionType" "type" ON "type"."id"="question"."typeId" WHERE "code"."id" = $1 -- PARAMETERS: [3]
query: SELECT "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "year"."id" AS "year_id", "year"."name" AS "year_name", "year"."year" AS "year_year", "year"."description" AS "year_description", "year"."openToPublic" AS "year_openToPublic", "year"."registrationDeadline" AS "year_registrationDeadline", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "answeredQuestions"."id" AS "answeredQuestions_id", "answeredQuestions"."answer" AS "answeredQuestions_answer", "answeredQuestions"."lastModified" AS "answeredQuestions_lastModified", "answeredQuestions"."created" AS "answeredQuestions_created", "answeredQuestions"."accessCodeId" AS "answeredQuestions_accessCodeId", "answeredQuestions"."questionId" AS "answeredQuestions_questionId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "test"."id" AS "test_id", "test"."timeLimit" AS "test_timeLimit", "test"."closed" AS "test_closed", "test"."lastModified" AS "test_lastModified", "test"."created" AS "test_created", "test"."roundId" AS "test_roundId", "test"."categoryId" AS "test_categoryId", "category"."id" AS "category_id", "category"."name" AS "category_name", "category"."classMin" AS "category_classMin", "category"."classMax" AS "category_classMax" FROM "accessCode" "code" LEFT JOIN "contestant" "contestant" ON "contestant"."id"="code"."contestantId"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="code"."roundId"  LEFT JOIN "olympiadYear" "year" ON "year"."id"="round"."yearId"  LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "answeredQuestion" "answeredQuestions" ON "answeredQuestions"."accessCodeId"="code"."id"  LEFT JOIN "question" "question" ON "question"."id"="answeredQuestions"."questionId"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answeredQuestions"."id"  LEFT JOIN "test" "test" ON "test"."id"="question"."testId"  LEFT JOIN "category" "category" ON "category"."id"="test"."categoryId" WHERE "code"."activated" IS NOT null AND "code"."testStart" IS NOT null AND "code"."evaluated" IS NOT null
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2020-08-12T13:06:05.208Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'creator' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [1]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [1]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [1]
query: START TRANSACTION
query: UPDATE "question" SET "img" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [1,"Bitcoin mine-3b19.png","2021-03-01T09:54:33.299Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (1) ) -- PARAMETERS: [1]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: 'Bitcoin mine-3b19.png',
      lastModified: 2021-03-01T09:54:33.299Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [1]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [1]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [1]
query: START TRANSACTION
query: UPDATE "question" SET "img" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [1,null,"2021-03-01T09:54:35.562Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (1) ) -- PARAMETERS: [1]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
LocalStrategy
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."username" = $1 LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."username" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."username" = $1 ) AND ( "AccountEntity"."id" IN (1) ) -- PARAMETERS: ["admin"]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."PostEntity_id" as "ids_PostEntity_id" FROM (SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE "PostEntity"."id" = $1) "distinctAlias"  ORDER BY "PostEntity_id" ASC LIMIT 1 -- PARAMETERS: [2]
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE ( "PostEntity"."id" = $1 ) AND ( "PostEntity"."id" IN (2) ) -- PARAMETERS: [2]
PostEntity {
  id: 2,
  title: 'Pokusný článek',
  content: 'Toto je pokuný článek s tím, že chci vědět, jestli se dá text formátovat, případně vložit odkazy z něj někam ... a taky, kam se zařadí na webu. \n' +
    'ˇAha, tak už vše vím...mohly by se články řadit podle data publikování naopak, tedy aby byly poslední články nahoře ... \n' +
    'A taky nevím, kolik znaků se objevuje v perexu a kolik je skryto pod tlačítkem VÍCE...:-) ',
  active: 0,
  lastModified: 2020-09-24T17:27:50.097Z,
  created: 2020-09-24T17:24:26.848Z,
  author: AccountEntity {
    id: 1,
    username: 'admin',
    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',
    email: 'email@seznam.cz',
    firstname: 'admin1',
    surname: 'admin2'
  }
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."PostEntity_id" as "ids_PostEntity_id" FROM (SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE "PostEntity"."id" = $1) "distinctAlias"  ORDER BY "PostEntity_id" ASC LIMIT 1 -- PARAMETERS: [2]
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE ( "PostEntity"."id" = $1 ) AND ( "PostEntity"."id" IN (2) ) -- PARAMETERS: [2]
PostEntity {
  id: 2,
  title: 'Pokusný článek',
  content: 'Toto je pokuný článek s tím, že chci vědět, jestli se dá text formátovat, případně vložit odkazy z něj někam ... a taky, kam se zařadí na webu. \n' +
    'ˇAha, tak už vše vím...mohly by se články řadit podle data publikování naopak, tedy aby byly poslední články nahoře ... \n' +
    'A taky nevím, kolik znaků se objevuje v perexu a kolik je skryto pod tlačítkem VÍCE...:-) ',
  active: 0,
  lastModified: 2020-09-24T17:27:50.097Z,
  created: 2020-09-24T17:24:26.848Z,
  author: AccountEntity {
    id: 1,
    username: 'admin',
    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',
    email: 'email@seznam.cz',
    firstname: 'admin1',
    surname: 'admin2'
  }
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."PostEntity_id" as "ids_PostEntity_id" FROM (SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE "PostEntity"."id" = $1) "distinctAlias"  ORDER BY "PostEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE ( "PostEntity"."id" = $1 ) AND ( "PostEntity"."id" IN (1) ) -- PARAMETERS: [1]
PostEntity {
  id: 1,
  title: 'Úvodní slovo k olympiádě',
  content: 'Dějepisná olympiáda (DĚO) je soutěž vycházející z obsahu vzdělávacího oboru dějepis v rámcových vzdělávacích programech a organizovaná jako cílevědomá vzdělávací aktivita založená na systematické práci s talentovanými žáky zejména 8. a 9. ročníků základních škol, 3. a 4. ročníků osmiletých gymnázií, 1. a 2. ročníků šestiletých gymnázií.\n' +
    '\n' +
    'Dějepisná olympiáda je postupovou soutěží, má 1 kategorii a člení se podle soutěžních kol (školní, okresní, krajské a celostátní). Soutěž je jednotná pro celé území České republiky a pořádá se každoročně. Každý ročník má jiné tematické zaměření, jednotné pro všechna postupová kola, jež se liší jen svou náročností. Zadání pro jednotlivá kola vytváří ústřední komise DĚO. \n' +
    '<br>\n' +
    'zdroj: http://vtp.talentovani.cz/dejepisna-olympiada',
  active: 0,
  lastModified: 2020-08-12T12:36:24.884Z,
  created: 2020-08-12T12:36:24.884Z,
  author: AccountEntity {
    id: 1,
    username: 'admin',
    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',
    email: 'email@seznam.cz',
    firstname: 'admin1',
    surname: 'admin2'
  }
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
LocalStrategy
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."username" = $1 LIMIT 1 -- PARAMETERS: ["admin"]
LocalStrategy
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."username" = $1 LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."username" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: ["admin"]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."username" = $1 ) AND ( "AccountEntity"."id" IN (1) ) -- PARAMETERS: ["admin"]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'guarantee', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
1
----------------------------------------------------------------
query: SELECT DISTINCT "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "district"."id" AS "district_id", "district"."name" AS "district_name", "district"."regionId" AS "district_regionId", "district"."contactPersonId" AS "district_contactPersonId", "region"."id" AS "region_id", "region"."name" AS "region_name", "region"."contactPersonId" AS "region_contactPersonId", "accessCode"."id" AS "accessCode_id", "accessCode"."code" AS "accessCode_code", "accessCode"."activated" AS "accessCode_activated", "accessCode"."testStart" AS "accessCode_testStart", "accessCode"."evaluated" AS "accessCode_evaluated", "accessCode"."contestantId" AS "accessCode_contestantId", "accessCode"."roundId" AS "accessCode_roundId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "type"."id" AS "type_id", "type"."name" AS "type_name" FROM "contestant" "contestant" LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "guarantee_schools_school" "schoolG_school" ON "schoolG_school"."schoolId"="school"."id" LEFT JOIN "guarantee" "schoolG" ON "schoolG"."id"="schoolG_school"."guaranteeId"  LEFT JOIN "district" "district" ON "district"."id"="school"."districtId"  LEFT JOIN "guarantee_districts_district" "districtG_district" ON "districtG_district"."districtId"="district"."id" LEFT JOIN "guarantee" "districtG" ON "districtG"."id"="districtG_district"."guaranteeId"  LEFT JOIN "region" "region" ON "region"."id"="district"."regionId"  LEFT JOIN "guarantee_regions_region" "regionG_region" ON "regionG_region"."regionId"="region"."id" LEFT JOIN "guarantee" "regionG" ON "regionG"."id"="regionG_region"."guaranteeId"  LEFT JOIN "accessCode" "accessCode" ON "accessCode"."contestantId"="contestant"."id"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="accessCode"."roundId"  LEFT JOIN "roundType" "type" ON "type"."id"="round"."typeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "round_roundG" ON "round_roundG"."olympiadRoundId"="round"."id" LEFT JOIN "guarantee" "roundG" ON "roundG"."id"="round_roundG"."guaranteeId"  LEFT JOIN "guarantee_round_types_round_type" "typeG_type" ON "typeG_type"."roundTypeId"="type"."id" LEFT JOIN "guarantee" "typeG" ON "typeG"."id"="typeG_type"."guaranteeId" WHERE "schoolG"."id" = $1 OR "districtG"."id" = $2 OR "regionG"."id" = $3 OR "roundG"."id" = $4 OR "typeG"."id" = $5 -- PARAMETERS: [1,1,1,1,1]
[
  ContestantEntity {
    id: 1,
    firstname: 'Dan',
    surname: 'Novotný',
    email: 'novy@seznam.cz',
    birthdate: '2006-06-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 2,
    firstname: 'Petra',
    surname: 'Nová',
    email: 'nova@email.com',
    birthdate: '2008-05-14',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 3,
    firstname: 'Adam',
    surname: 'Pavel',
    email: 'pavel@seznam.cz',
    birthdate: '2008-05-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  }
]
query: SELECT DISTINCT "distinctAlias"."ContestantEntity_id" as "ids_ContestantEntity_id" FROM (SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE "ContestantEntity"."id" = $1) "distinctAlias"  ORDER BY "ContestantEntity_id" ASC LIMIT 1 -- PARAMETERS: [2]
query: SELECT "ContestantEntity"."id" AS "ContestantEntity_id", "ContestantEntity"."firstname" AS "ContestantEntity_firstname", "ContestantEntity"."surname" AS "ContestantEntity_surname", "ContestantEntity"."email" AS "ContestantEntity_email", "ContestantEntity"."birthdate" AS "ContestantEntity_birthdate", "ContestantEntity"."classNum" AS "ContestantEntity_classNum", "ContestantEntity"."schoolId" AS "ContestantEntity_schoolId", "ContestantEntity__school"."id" AS "ContestantEntity__school_id", "ContestantEntity__school"."name" AS "ContestantEntity__school_name", "ContestantEntity__school"."districtId" AS "ContestantEntity__school_districtId", "ContestantEntity__school"."contactPersonId" AS "ContestantEntity__school_contactPersonId", "ContestantEntity__school__district"."id" AS "ContestantEntity__school__district_id", "ContestantEntity__school__district"."name" AS "ContestantEntity__school__district_name", "ContestantEntity__school__district"."regionId" AS "ContestantEntity__school__district_regionId", "ContestantEntity__school__district"."contactPersonId" AS "ContestantEntity__school__district_contactPersonId", "ContestantEntity__school__district__region"."id" AS "ContestantEntity__school__district__region_id", "ContestantEntity__school__district__region"."name" AS "ContestantEntity__school__district__region_name", "ContestantEntity__school__district__region"."contactPersonId" AS "ContestantEntity__school__district__region_contactPersonId", "ContestantEntity__accessCodes"."id" AS "ContestantEntity__accessCodes_id", "ContestantEntity__accessCodes"."code" AS "ContestantEntity__accessCodes_code", "ContestantEntity__accessCodes"."activated" AS "ContestantEntity__accessCodes_activated", "ContestantEntity__accessCodes"."testStart" AS "ContestantEntity__accessCodes_testStart", "ContestantEntity__accessCodes"."evaluated" AS "ContestantEntity__accessCodes_evaluated", "ContestantEntity__accessCodes"."contestantId" AS "ContestantEntity__accessCodes_contestantId", "ContestantEntity__accessCodes"."roundId" AS "ContestantEntity__accessCodes_roundId", "ContestantEntity__accessCodes_contestant"."id" AS "ContestantEntity__accessCodes_contestant_id", "ContestantEntity__accessCodes_contestant"."firstname" AS "ContestantEntity__accessCodes_contestant_firstname", "ContestantEntity__accessCodes_contestant"."surname" AS "ContestantEntity__accessCodes_contestant_surname", "ContestantEntity__accessCodes_contestant"."email" AS "ContestantEntity__accessCodes_contestant_email", "ContestantEntity__accessCodes_contestant"."birthdate" AS "ContestantEntity__accessCodes_contestant_birthdate", "ContestantEntity__accessCodes_contestant"."classNum" AS "ContestantEntity__accessCodes_contestant_classNum", "ContestantEntity__accessCodes_contestant"."schoolId" AS "ContestantEntity__accessCodes_contestant_schoolId", "ContestantEntity__accessCodes__round"."id" AS "ContestantEntity__accessCodes__round_id", "ContestantEntity__accessCodes__round"."roundStart" AS "ContestantEntity__accessCodes__round_roundStart", "ContestantEntity__accessCodes__round"."roundEnd" AS "ContestantEntity__accessCodes__round_roundEnd", "ContestantEntity__accessCodes__round"."nextRoundId" AS "ContestantEntity__accessCodes__round_nextRoundId", "ContestantEntity__accessCodes__round"."typeId" AS "ContestantEntity__accessCodes__round_typeId", "ContestantEntity__accessCodes__round"."yearId" AS "ContestantEntity__accessCodes__round_yearId", "ContestantEntity__accessCodes__round_type"."id" AS "ContestantEntity__accessCodes__round_type_id", "ContestantEntity__accessCodes__round_type"."name" AS "ContestantEntity__accessCodes__round_type_name", "ContestantEntity__accessCodes__round__year"."id" AS "ContestantEntity__accessCodes__round__year_id", "ContestantEntity__accessCodes__round__year"."name" AS "ContestantEntity__accessCodes__round__year_name", "ContestantEntity__accessCodes__round__year"."year" AS "ContestantEntity__accessCodes__round__year_year", "ContestantEntity__accessCodes__round__year"."description" AS "ContestantEntity__accessCodes__round__year_description", "ContestantEntity__accessCodes__round__year"."openToPublic" AS "ContestantEntity__accessCodes__round__year_openToPublic", "ContestantEntity__accessCodes__round__year"."registrationDeadline" AS "ContestantEntity__accessCodes__round__year_registrationDeadline" FROM "contestant" "ContestantEntity" LEFT JOIN "school" "ContestantEntity__school" ON "ContestantEntity__school"."id"="ContestantEntity"."schoolId"  LEFT JOIN "district" "ContestantEntity__school__district" ON "ContestantEntity__school__district"."id"="ContestantEntity__school"."districtId"  LEFT JOIN "region" "ContestantEntity__school__district__region" ON "ContestantEntity__school__district__region"."id"="ContestantEntity__school__district"."regionId"  LEFT JOIN "accessCode" "ContestantEntity__accessCodes" ON "ContestantEntity__accessCodes"."contestantId"="ContestantEntity"."id"  LEFT JOIN "contestant" "ContestantEntity__accessCodes_contestant" ON "ContestantEntity__accessCodes_contestant"."id"="ContestantEntity__accessCodes"."contestantId"  LEFT JOIN "olympiadRound" "ContestantEntity__accessCodes__round" ON "ContestantEntity__accessCodes__round"."id"="ContestantEntity__accessCodes"."roundId"  LEFT JOIN "roundType" "ContestantEntity__accessCodes__round_type" ON "ContestantEntity__accessCodes__round_type"."id"="ContestantEntity__accessCodes__round"."typeId"  LEFT JOIN "olympiadYear" "ContestantEntity__accessCodes__round__year" ON "ContestantEntity__accessCodes__round__year"."id"="ContestantEntity__accessCodes__round"."yearId" WHERE ( "ContestantEntity"."id" = $1 ) AND ( "ContestantEntity"."id" IN (2) ) -- PARAMETERS: [2]
ContestantEntity {
  id: 2,
  firstname: 'Petra',
  surname: 'Nová',
  email: 'nova@email.com',
  birthdate: '2008-05-14',
  classNum: 2,
  school: SchoolEntity {
    id: 2,
    name: 'ZS Liberec',
    district: DistrictEntity { id: 2, name: 'Liberec', region: [RegionEntity] }
  },
  accessCodes: [
    AccessCodeEntity {
      id: 2,
      code: 'skLI0ssnhz',
      activated: 2020-09-25T06:30:23.030Z,
      testStart: 2020-09-25T07:46:47.815Z,
      evaluated: 2020-09-25T08:03:10.205Z,
      contestant: [ContestantEntity],
      round: [OlympiadRoundEntity]
    }
  ]
}
query: SELECT "answers"."id" AS "answers_id", "answers"."answer" AS "answers_answer", "answers"."lastModified" AS "answers_lastModified", "answers"."created" AS "answers_created", "answers"."accessCodeId" AS "answers_accessCodeId", "answers"."questionId" AS "answers_questionId", "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "options"."id" AS "options_id", "options"."content" AS "options_content", "options"."img" AS "options_img", "options"."correct" AS "options_correct", "options"."questionId" AS "options_questionId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "type"."id" AS "type_id", "type"."type" AS "type_type", "type"."serverEvaluation" AS "type_serverEvaluation" FROM "answeredQuestion" "answers" LEFT JOIN "accessCode" "code" ON "code"."id"="answers"."accessCodeId"  LEFT JOIN "question" "question" ON "question"."id"="answers"."questionId"  LEFT JOIN "questionOption" "options" ON "options"."questionId"="question"."id"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answers"."id"  LEFT JOIN "questionType" "type" ON "type"."id"="question"."typeId" WHERE "code"."id" = $1 -- PARAMETERS: [2]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__questions"."id" AS "TestEntity__questions_id", "TestEntity__questions"."task" AS "TestEntity__questions_task", "TestEntity__questions"."points" AS "TestEntity__questions_points", "TestEntity__questions"."orderNum" AS "TestEntity__questions_orderNum", "TestEntity__questions"."img" AS "TestEntity__questions_img", "TestEntity__questions"."lastModified" AS "TestEntity__questions_lastModified", "TestEntity__questions"."created" AS "TestEntity__questions_created", "TestEntity__questions"."typeId" AS "TestEntity__questions_typeId", "TestEntity__questions"."testId" AS "TestEntity__questions_testId", "TestEntity__questions_options"."id" AS "TestEntity__questions_options_id", "TestEntity__questions_options"."content" AS "TestEntity__questions_options_content", "TestEntity__questions_options"."img" AS "TestEntity__questions_options_img", "TestEntity__questions_options"."correct" AS "TestEntity__questions_options_correct", "TestEntity__questions_options"."questionId" AS "TestEntity__questions_options_questionId", "TestEntity__questions_type"."id" AS "TestEntity__questions_type_id", "TestEntity__questions_type"."type" AS "TestEntity__questions_type_type", "TestEntity__questions_type"."serverEvaluation" AS "TestEntity__questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "question" "TestEntity__questions" ON "TestEntity__questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity__questions_options" ON "TestEntity__questions_options"."questionId"="TestEntity__questions"."id"  LEFT JOIN "questionType" "TestEntity__questions_type" ON "TestEntity__questions_type"."id"="TestEntity__questions"."typeId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__questions"."id" AS "TestEntity__questions_id", "TestEntity__questions"."task" AS "TestEntity__questions_task", "TestEntity__questions"."points" AS "TestEntity__questions_points", "TestEntity__questions"."orderNum" AS "TestEntity__questions_orderNum", "TestEntity__questions"."img" AS "TestEntity__questions_img", "TestEntity__questions"."lastModified" AS "TestEntity__questions_lastModified", "TestEntity__questions"."created" AS "TestEntity__questions_created", "TestEntity__questions"."typeId" AS "TestEntity__questions_typeId", "TestEntity__questions"."testId" AS "TestEntity__questions_testId", "TestEntity__questions_options"."id" AS "TestEntity__questions_options_id", "TestEntity__questions_options"."content" AS "TestEntity__questions_options_content", "TestEntity__questions_options"."img" AS "TestEntity__questions_options_img", "TestEntity__questions_options"."correct" AS "TestEntity__questions_options_correct", "TestEntity__questions_options"."questionId" AS "TestEntity__questions_options_questionId", "TestEntity__questions_type"."id" AS "TestEntity__questions_type_id", "TestEntity__questions_type"."type" AS "TestEntity__questions_type_type", "TestEntity__questions_type"."serverEvaluation" AS "TestEntity__questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "question" "TestEntity__questions" ON "TestEntity__questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity__questions_options" ON "TestEntity__questions_options"."questionId"="TestEntity__questions"."id"  LEFT JOIN "questionType" "TestEntity__questions_type" ON "TestEntity__questions_type"."id"="TestEntity__questions"."typeId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1, $2, $3, $4, $5, $6, $7, $8) -- PARAMETERS: [1,2,3,4,5,6,13,7]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [1,1]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [2,2]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [3,3]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [4,4]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [5,5]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [6,6]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [13,7]
query: UPDATE "question" SET "orderNum" = $2 WHERE "id" IN ($1) -- PARAMETERS: [7,8]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 3,
      orderNum: 8,
      img: null,
      lastModified: 2020-10-15T14:22:26.664Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [7]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [7]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [7]
query: START TRANSACTION
query: UPDATE "question" SET "points" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [7,8,"2021-05-26T12:06:15.698Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [7]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (7) ) -- PARAMETERS: [7]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 8,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:15.698Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [7]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [7]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [7]
query: START TRANSACTION
query: UPDATE "question" SET "points" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [7,6,"2021-05-26T12:06:19.234Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [7]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (7) ) -- PARAMETERS: [7]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 6,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:19.234Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [7]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId" FROM "question" "QuestionEntity" WHERE "QuestionEntity"."id" IN ($1) -- PARAMETERS: [7]
query: SELECT "questionOption"."id" AS "id", "questionOption"."questionId" AS "questionId" FROM "questionOption" "questionOption" WHERE (("questionOption"."questionId" = $1)) -- PARAMETERS: [7]
query: START TRANSACTION
query: UPDATE "question" SET "points" = $2, "lastModified" = $3 WHERE "id" IN ($1) -- PARAMETERS: [7,5,"2021-05-26T12:06:20.765Z"]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."QuestionEntity_id" as "ids_QuestionEntity_id" FROM (SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE "QuestionEntity"."id" = $1) "distinctAlias"  ORDER BY "QuestionEntity_id" ASC LIMIT 1 -- PARAMETERS: [7]
query: SELECT "QuestionEntity"."id" AS "QuestionEntity_id", "QuestionEntity"."task" AS "QuestionEntity_task", "QuestionEntity"."points" AS "QuestionEntity_points", "QuestionEntity"."orderNum" AS "QuestionEntity_orderNum", "QuestionEntity"."img" AS "QuestionEntity_img", "QuestionEntity"."lastModified" AS "QuestionEntity_lastModified", "QuestionEntity"."created" AS "QuestionEntity_created", "QuestionEntity"."typeId" AS "QuestionEntity_typeId", "QuestionEntity"."testId" AS "QuestionEntity_testId", "QuestionEntity_options"."id" AS "QuestionEntity_options_id", "QuestionEntity_options"."content" AS "QuestionEntity_options_content", "QuestionEntity_options"."img" AS "QuestionEntity_options_img", "QuestionEntity_options"."correct" AS "QuestionEntity_options_correct", "QuestionEntity_options"."questionId" AS "QuestionEntity_options_questionId", "QuestionEntity_type"."id" AS "QuestionEntity_type_id", "QuestionEntity_type"."type" AS "QuestionEntity_type_type", "QuestionEntity_type"."serverEvaluation" AS "QuestionEntity_type_serverEvaluation", "QuestionEntity__options"."id" AS "QuestionEntity__options_id", "QuestionEntity__options"."content" AS "QuestionEntity__options_content", "QuestionEntity__options"."img" AS "QuestionEntity__options_img", "QuestionEntity__options"."correct" AS "QuestionEntity__options_correct", "QuestionEntity__options"."questionId" AS "QuestionEntity__options_questionId" FROM "question" "QuestionEntity" LEFT JOIN "questionOption" "QuestionEntity_options" ON "QuestionEntity_options"."questionId"="QuestionEntity"."id"  LEFT JOIN "questionType" "QuestionEntity_type" ON "QuestionEntity_type"."id"="QuestionEntity"."typeId"  LEFT JOIN "questionOption" "QuestionEntity__options" ON "QuestionEntity__options"."questionId"="QuestionEntity"."id" WHERE ( "QuestionEntity"."id" = $1 ) AND ( "QuestionEntity"."id" IN (7) ) -- PARAMETERS: [7]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2020-11-09T12:01:47.787Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId" FROM "test" "TestEntity" WHERE "TestEntity"."id" IN ($1) -- PARAMETERS: [10000]
query: SELECT "question"."id" AS "id", "question"."testId" AS "testId" FROM "question" "question" WHERE (("question"."testId" = $1)) -- PARAMETERS: [10000]
query: START TRANSACTION
query: UPDATE "test" SET "lastModified" = $2, "categoryId" = $3 WHERE "id" IN ($1) -- PARAMETERS: [10000,"2021-05-26T12:06:25.172Z",null]
query: COMMIT
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE "TestEntity"."id" IN ($1) -- PARAMETERS: [10000]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:25.172Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId" FROM "test" "TestEntity" WHERE "TestEntity"."id" IN ($1) -- PARAMETERS: [10000]
query: SELECT "question"."id" AS "id", "question"."testId" AS "testId" FROM "question" "question" WHERE (("question"."testId" = $1)) -- PARAMETERS: [10000]
query: START TRANSACTION
query: UPDATE "test" SET "closed" = $2, "lastModified" = $3, "categoryId" = $4 WHERE "id" IN ($1) -- PARAMETERS: [10000,0,"2021-05-26T12:06:25.873Z",null]
query: COMMIT
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE "TestEntity"."id" IN ($1) -- PARAMETERS: [10000]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: false,
  lastModified: 2021-05-26T12:06:25.873Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId" FROM "test" "TestEntity" WHERE "TestEntity"."id" IN ($1) -- PARAMETERS: [10000]
query: SELECT "question"."id" AS "id", "question"."testId" AS "testId" FROM "question" "question" WHERE (("question"."testId" = $1)) -- PARAMETERS: [10000]
query: START TRANSACTION
query: UPDATE "test" SET "closed" = $2, "lastModified" = $3, "categoryId" = $4 WHERE "id" IN ($1) -- PARAMETERS: [10000,1,"2021-05-26T12:06:26.609Z",null]
query: COMMIT
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId" WHERE "TestEntity"."id" IN ($1) -- PARAMETERS: [10000]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "QuestionTypeEntity"."id" AS "QuestionTypeEntity_id", "QuestionTypeEntity"."type" AS "QuestionTypeEntity_type", "QuestionTypeEntity"."serverEvaluation" AS "QuestionTypeEntity_serverEvaluation" FROM "questionType" "QuestionTypeEntity"
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'creator', 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId" FROM "accessCode" "code" WHERE "code"."activated" IS NOT null AND "code"."testStart" IS NOT null AND "code"."evaluated" IS null
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id"
query: SELECT "PermissionTypeEntity"."id" AS "PermissionTypeEntity_id", "PermissionTypeEntity"."name" AS "PermissionTypeEntity_name" FROM "permissionType" "PermissionTypeEntity"
query: SELECT "SchoolEntity"."id" AS "SchoolEntity_id", "SchoolEntity"."name" AS "SchoolEntity_name", "SchoolEntity"."districtId" AS "SchoolEntity_districtId", "SchoolEntity"."contactPersonId" AS "SchoolEntity_contactPersonId", "SchoolEntity__contactPerson"."id" AS "SchoolEntity__contactPerson_id", "SchoolEntity__contactPerson"."firstname" AS "SchoolEntity__contactPerson_firstname", "SchoolEntity__contactPerson"."surname" AS "SchoolEntity__contactPerson_surname", "SchoolEntity__contactPerson"."phone" AS "SchoolEntity__contactPerson_phone", "SchoolEntity__contactPerson"."email" AS "SchoolEntity__contactPerson_email" FROM "school" "SchoolEntity" LEFT JOIN "contactPerson" "SchoolEntity__contactPerson" ON "SchoolEntity__contactPerson"."id"="SchoolEntity"."contactPersonId"
query: SELECT "DistrictEntity"."id" AS "DistrictEntity_id", "DistrictEntity"."name" AS "DistrictEntity_name", "DistrictEntity"."regionId" AS "DistrictEntity_regionId", "DistrictEntity"."contactPersonId" AS "DistrictEntity_contactPersonId" FROM "district" "DistrictEntity"
query: SELECT "RegionEntity"."id" AS "RegionEntity_id", "RegionEntity"."name" AS "RegionEntity_name", "RegionEntity"."contactPersonId" AS "RegionEntity_contactPersonId" FROM "region" "RegionEntity"
query: SELECT "RoundTypeEntity"."id" AS "RoundTypeEntity_id", "RoundTypeEntity"."name" AS "RoundTypeEntity_name" FROM "roundType" "RoundTypeEntity"
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [],
  guarantee: null
}
query: SELECT DISTINCT "distinctAlias"."PermissionEntity_id" as "ids_PermissionEntity_id" FROM (SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2) "distinctAlias"  ORDER BY "PermissionEntity_id" ASC LIMIT 1 -- PARAMETERS: [3,1]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [3]
query: SELECT "PermissionTypeEntity"."id" AS "PermissionTypeEntity_id", "PermissionTypeEntity"."name" AS "PermissionTypeEntity_name" FROM "permissionType" "PermissionTypeEntity" WHERE "PermissionTypeEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: START TRANSACTION
query: INSERT INTO "permission"("typeId", "accountId") VALUES ($1, $2) RETURNING "id" -- PARAMETERS: [1,3]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."PermissionEntity_id" as "ids_PermissionEntity_id" FROM (SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2 AND "PermissionEntity"."id" = $3) "distinctAlias"  ORDER BY "PermissionEntity_id" ASC LIMIT 1 -- PARAMETERS: [3,1,4]
query: SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE ( "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2 AND "PermissionEntity"."id" = $3 ) AND ( "PermissionEntity"."id" IN (4) ) -- PARAMETERS: [3,1,4]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [ PermissionEntity { id: 4, type: [PermissionTypeEntity] } ],
  guarantee: null
}
query: SELECT DISTINCT "distinctAlias"."PermissionEntity_id" as "ids_PermissionEntity_id" FROM (SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2) "distinctAlias"  ORDER BY "PermissionEntity_id" ASC LIMIT 1 -- PARAMETERS: [3,2]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [3]
query: SELECT "PermissionTypeEntity"."id" AS "PermissionTypeEntity_id", "PermissionTypeEntity"."name" AS "PermissionTypeEntity_name" FROM "permissionType" "PermissionTypeEntity" WHERE "PermissionTypeEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [2]
query: START TRANSACTION
query: INSERT INTO "permission"("typeId", "accountId") VALUES ($1, $2) RETURNING "id" -- PARAMETERS: [2,3]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."PermissionEntity_id" as "ids_PermissionEntity_id" FROM (SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2 AND "PermissionEntity"."id" = $3) "distinctAlias"  ORDER BY "PermissionEntity_id" ASC LIMIT 1 -- PARAMETERS: [3,2,5]
query: SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE ( "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2 AND "PermissionEntity"."id" = $3 ) AND ( "PermissionEntity"."id" IN (5) ) -- PARAMETERS: [3,2,5]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [
    PermissionEntity { id: 4, type: [PermissionTypeEntity] },
    PermissionEntity { id: 5, type: [PermissionTypeEntity] }
  ],
  guarantee: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [
    PermissionEntity { id: 4, type: [PermissionTypeEntity] },
    PermissionEntity { id: 5, type: [PermissionTypeEntity] }
  ],
  guarantee: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: DELETE FROM "permission" WHERE "id" IN ($1) -- PARAMETERS: [5]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [ PermissionEntity { id: 4, type: [PermissionTypeEntity] } ],
  guarantee: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: DELETE FROM "permission" WHERE "id" IN ($1) -- PARAMETERS: [4]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [],
  guarantee: null
}
query: SELECT DISTINCT "distinctAlias"."PermissionEntity_id" as "ids_PermissionEntity_id" FROM (SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2) "distinctAlias"  ORDER BY "PermissionEntity_id" ASC LIMIT 1 -- PARAMETERS: [3,3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [3]
query: SELECT "PermissionTypeEntity"."id" AS "PermissionTypeEntity_id", "PermissionTypeEntity"."name" AS "PermissionTypeEntity_name" FROM "permissionType" "PermissionTypeEntity" WHERE "PermissionTypeEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [3]
query: START TRANSACTION
query: INSERT INTO "permission"("typeId", "accountId") VALUES ($1, $2) RETURNING "id" -- PARAMETERS: [3,3]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."PermissionEntity_id" as "ids_PermissionEntity_id" FROM (SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2 AND "PermissionEntity"."id" = $3) "distinctAlias"  ORDER BY "PermissionEntity_id" ASC LIMIT 1 -- PARAMETERS: [3,3,6]
query: SELECT "PermissionEntity"."id" AS "PermissionEntity_id", "PermissionEntity"."typeId" AS "PermissionEntity_typeId", "PermissionEntity"."accountId" AS "PermissionEntity_accountId", "PermissionEntity_type"."id" AS "PermissionEntity_type_id", "PermissionEntity_type"."name" AS "PermissionEntity_type_name" FROM "permission" "PermissionEntity" LEFT JOIN "permissionType" "PermissionEntity_type" ON "PermissionEntity_type"."id"="PermissionEntity"."typeId" WHERE ( "PermissionEntity"."accountId" = $1 AND "PermissionEntity"."typeId" = $2 AND "PermissionEntity"."id" = $3 ) AND ( "PermissionEntity"."id" IN (6) ) -- PARAMETERS: [3,3,6]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [ PermissionEntity { id: 6, type: [PermissionTypeEntity] } ],
  guarantee: null
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: DELETE FROM "permission" WHERE "id" IN ($1) -- PARAMETERS: [6]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [],
  guarantee: null
}
query: SELECT "GuaranteeEntity"."id" AS "GuaranteeEntity_id", "GuaranteeEntity"."accountId" AS "GuaranteeEntity_accountId" FROM "guarantee" "GuaranteeEntity" WHERE "GuaranteeEntity"."accountId" = $1 LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname" FROM "account" "AccountEntity" WHERE "AccountEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [3]
query: START TRANSACTION
query: INSERT INTO "guarantee"("accountId") VALUES ($1) RETURNING "id" -- PARAMETERS: [3]
query: COMMIT
query: SELECT DISTINCT "distinctAlias"."GuaranteeEntity_id" as "ids_GuaranteeEntity_id" FROM (SELECT "GuaranteeEntity"."id" AS "GuaranteeEntity_id", "GuaranteeEntity"."accountId" AS "GuaranteeEntity_accountId", "GuaranteeEntity__account"."id" AS "GuaranteeEntity__account_id", "GuaranteeEntity__account"."username" AS "GuaranteeEntity__account_username", "GuaranteeEntity__account"."password" AS "GuaranteeEntity__account_password", "GuaranteeEntity__account"."email" AS "GuaranteeEntity__account_email", "GuaranteeEntity__account"."firstname" AS "GuaranteeEntity__account_firstname", "GuaranteeEntity__account"."surname" AS "GuaranteeEntity__account_surname", "GuaranteeEntity__regions"."id" AS "GuaranteeEntity__regions_id", "GuaranteeEntity__regions"."name" AS "GuaranteeEntity__regions_name", "GuaranteeEntity__regions"."contactPersonId" AS "GuaranteeEntity__regions_contactPersonId", "GuaranteeEntity__districts"."id" AS "GuaranteeEntity__districts_id", "GuaranteeEntity__districts"."name" AS "GuaranteeEntity__districts_name", "GuaranteeEntity__districts"."regionId" AS "GuaranteeEntity__districts_regionId", "GuaranteeEntity__districts"."contactPersonId" AS "GuaranteeEntity__districts_contactPersonId", "GuaranteeEntity__schools"."id" AS "GuaranteeEntity__schools_id", "GuaranteeEntity__schools"."name" AS "GuaranteeEntity__schools_name", "GuaranteeEntity__schools"."districtId" AS "GuaranteeEntity__schools_districtId", "GuaranteeEntity__schools"."contactPersonId" AS "GuaranteeEntity__schools_contactPersonId", "GuaranteeEntity__roundTypes"."id" AS "GuaranteeEntity__roundTypes_id", "GuaranteeEntity__roundTypes"."name" AS "GuaranteeEntity__roundTypes_name", "GuaranteeEntity__guaranteedRounds"."id" AS "GuaranteeEntity__guaranteedRounds_id", "GuaranteeEntity__guaranteedRounds"."roundStart" AS "GuaranteeEntity__guaranteedRounds_roundStart", "GuaranteeEntity__guaranteedRounds"."roundEnd" AS "GuaranteeEntity__guaranteedRounds_roundEnd", "GuaranteeEntity__guaranteedRounds"."nextRoundId" AS "GuaranteeEntity__guaranteedRounds_nextRoundId", "GuaranteeEntity__guaranteedRounds"."typeId" AS "GuaranteeEntity__guaranteedRounds_typeId", "GuaranteeEntity__guaranteedRounds"."yearId" AS "GuaranteeEntity__guaranteedRounds_yearId", "GuaranteeEntity__guaranteedRounds_type"."id" AS "GuaranteeEntity__guaranteedRounds_type_id", "GuaranteeEntity__guaranteedRounds_type"."name" AS "GuaranteeEntity__guaranteedRounds_type_name" FROM "guarantee" "GuaranteeEntity" LEFT JOIN "account" "GuaranteeEntity__account" ON "GuaranteeEntity__account"."id"="GuaranteeEntity"."accountId"  LEFT JOIN "guarantee_regions_region" "GuaranteeEntity_GuaranteeEntity__regions" ON "GuaranteeEntity_GuaranteeEntity__regions"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "region" "GuaranteeEntity__regions" ON "GuaranteeEntity__regions"."id"="GuaranteeEntity_GuaranteeEntity__regions"."regionId"  LEFT JOIN "guarantee_districts_district" "GuaranteeEntity_GuaranteeEntity__districts" ON "GuaranteeEntity_GuaranteeEntity__districts"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "district" "GuaranteeEntity__districts" ON "GuaranteeEntity__districts"."id"="GuaranteeEntity_GuaranteeEntity__districts"."districtId"  LEFT JOIN "guarantee_schools_school" "GuaranteeEntity_GuaranteeEntity__schools" ON "GuaranteeEntity_GuaranteeEntity__schools"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "school" "GuaranteeEntity__schools" ON "GuaranteeEntity__schools"."id"="GuaranteeEntity_GuaranteeEntity__schools"."schoolId"  LEFT JOIN "guarantee_round_types_round_type" "GuaranteeEntity_GuaranteeEntity__roundTypes" ON "GuaranteeEntity_GuaranteeEntity__roundTypes"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "roundType" "GuaranteeEntity__roundTypes" ON "GuaranteeEntity__roundTypes"."id"="GuaranteeEntity_GuaranteeEntity__roundTypes"."roundTypeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "GuaranteeEntity__guaranteedRounds_GuaranteeEntity" ON "GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "olympiadRound" "GuaranteeEntity__guaranteedRounds" ON "GuaranteeEntity__guaranteedRounds"."id"="GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."olympiadRoundId"  LEFT JOIN "roundType" "GuaranteeEntity__guaranteedRounds_type" ON "GuaranteeEntity__guaranteedRounds_type"."id"="GuaranteeEntity__guaranteedRounds"."typeId" WHERE "GuaranteeEntity"."id" = $1) "distinctAlias"  ORDER BY "GuaranteeEntity_id" ASC LIMIT 1 -- PARAMETERS: [2]
query: SELECT "GuaranteeEntity"."id" AS "GuaranteeEntity_id", "GuaranteeEntity"."accountId" AS "GuaranteeEntity_accountId", "GuaranteeEntity__account"."id" AS "GuaranteeEntity__account_id", "GuaranteeEntity__account"."username" AS "GuaranteeEntity__account_username", "GuaranteeEntity__account"."password" AS "GuaranteeEntity__account_password", "GuaranteeEntity__account"."email" AS "GuaranteeEntity__account_email", "GuaranteeEntity__account"."firstname" AS "GuaranteeEntity__account_firstname", "GuaranteeEntity__account"."surname" AS "GuaranteeEntity__account_surname", "GuaranteeEntity__regions"."id" AS "GuaranteeEntity__regions_id", "GuaranteeEntity__regions"."name" AS "GuaranteeEntity__regions_name", "GuaranteeEntity__regions"."contactPersonId" AS "GuaranteeEntity__regions_contactPersonId", "GuaranteeEntity__districts"."id" AS "GuaranteeEntity__districts_id", "GuaranteeEntity__districts"."name" AS "GuaranteeEntity__districts_name", "GuaranteeEntity__districts"."regionId" AS "GuaranteeEntity__districts_regionId", "GuaranteeEntity__districts"."contactPersonId" AS "GuaranteeEntity__districts_contactPersonId", "GuaranteeEntity__schools"."id" AS "GuaranteeEntity__schools_id", "GuaranteeEntity__schools"."name" AS "GuaranteeEntity__schools_name", "GuaranteeEntity__schools"."districtId" AS "GuaranteeEntity__schools_districtId", "GuaranteeEntity__schools"."contactPersonId" AS "GuaranteeEntity__schools_contactPersonId", "GuaranteeEntity__roundTypes"."id" AS "GuaranteeEntity__roundTypes_id", "GuaranteeEntity__roundTypes"."name" AS "GuaranteeEntity__roundTypes_name", "GuaranteeEntity__guaranteedRounds"."id" AS "GuaranteeEntity__guaranteedRounds_id", "GuaranteeEntity__guaranteedRounds"."roundStart" AS "GuaranteeEntity__guaranteedRounds_roundStart", "GuaranteeEntity__guaranteedRounds"."roundEnd" AS "GuaranteeEntity__guaranteedRounds_roundEnd", "GuaranteeEntity__guaranteedRounds"."nextRoundId" AS "GuaranteeEntity__guaranteedRounds_nextRoundId", "GuaranteeEntity__guaranteedRounds"."typeId" AS "GuaranteeEntity__guaranteedRounds_typeId", "GuaranteeEntity__guaranteedRounds"."yearId" AS "GuaranteeEntity__guaranteedRounds_yearId", "GuaranteeEntity__guaranteedRounds_type"."id" AS "GuaranteeEntity__guaranteedRounds_type_id", "GuaranteeEntity__guaranteedRounds_type"."name" AS "GuaranteeEntity__guaranteedRounds_type_name" FROM "guarantee" "GuaranteeEntity" LEFT JOIN "account" "GuaranteeEntity__account" ON "GuaranteeEntity__account"."id"="GuaranteeEntity"."accountId"  LEFT JOIN "guarantee_regions_region" "GuaranteeEntity_GuaranteeEntity__regions" ON "GuaranteeEntity_GuaranteeEntity__regions"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "region" "GuaranteeEntity__regions" ON "GuaranteeEntity__regions"."id"="GuaranteeEntity_GuaranteeEntity__regions"."regionId"  LEFT JOIN "guarantee_districts_district" "GuaranteeEntity_GuaranteeEntity__districts" ON "GuaranteeEntity_GuaranteeEntity__districts"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "district" "GuaranteeEntity__districts" ON "GuaranteeEntity__districts"."id"="GuaranteeEntity_GuaranteeEntity__districts"."districtId"  LEFT JOIN "guarantee_schools_school" "GuaranteeEntity_GuaranteeEntity__schools" ON "GuaranteeEntity_GuaranteeEntity__schools"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "school" "GuaranteeEntity__schools" ON "GuaranteeEntity__schools"."id"="GuaranteeEntity_GuaranteeEntity__schools"."schoolId"  LEFT JOIN "guarantee_round_types_round_type" "GuaranteeEntity_GuaranteeEntity__roundTypes" ON "GuaranteeEntity_GuaranteeEntity__roundTypes"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "roundType" "GuaranteeEntity__roundTypes" ON "GuaranteeEntity__roundTypes"."id"="GuaranteeEntity_GuaranteeEntity__roundTypes"."roundTypeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "GuaranteeEntity__guaranteedRounds_GuaranteeEntity" ON "GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "olympiadRound" "GuaranteeEntity__guaranteedRounds" ON "GuaranteeEntity__guaranteedRounds"."id"="GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."olympiadRoundId"  LEFT JOIN "roundType" "GuaranteeEntity__guaranteedRounds_type" ON "GuaranteeEntity__guaranteedRounds_type"."id"="GuaranteeEntity__guaranteedRounds"."typeId" WHERE ( "GuaranteeEntity"."id" = $1 ) AND ( "GuaranteeEntity"."id" IN (2) ) -- PARAMETERS: [2]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ <1 empty item>, 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT DISTINCT "distinctAlias"."AccountEntity_id" as "ids_AccountEntity_id" FROM (SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE "AccountEntity"."id" = $1) "distinctAlias"  ORDER BY "AccountEntity_id" ASC LIMIT 1 -- PARAMETERS: [3]
query: SELECT "AccountEntity"."id" AS "AccountEntity_id", "AccountEntity"."username" AS "AccountEntity_username", "AccountEntity"."password" AS "AccountEntity_password", "AccountEntity"."email" AS "AccountEntity_email", "AccountEntity"."firstname" AS "AccountEntity_firstname", "AccountEntity"."surname" AS "AccountEntity_surname", "AccountEntity__permissions"."id" AS "AccountEntity__permissions_id", "AccountEntity__permissions"."typeId" AS "AccountEntity__permissions_typeId", "AccountEntity__permissions"."accountId" AS "AccountEntity__permissions_accountId", "AccountEntity__permissions_type"."id" AS "AccountEntity__permissions_type_id", "AccountEntity__permissions_type"."name" AS "AccountEntity__permissions_type_name", "AccountEntity__guarantee"."id" AS "AccountEntity__guarantee_id", "AccountEntity__guarantee"."accountId" AS "AccountEntity__guarantee_accountId" FROM "account" "AccountEntity" LEFT JOIN "permission" "AccountEntity__permissions" ON "AccountEntity__permissions"."accountId"="AccountEntity"."id"  LEFT JOIN "permissionType" "AccountEntity__permissions_type" ON "AccountEntity__permissions_type"."id"="AccountEntity__permissions"."typeId"  LEFT JOIN "guarantee" "AccountEntity__guarantee" ON "AccountEntity__guarantee"."accountId"="AccountEntity"."id" WHERE ( "AccountEntity"."id" = $1 ) AND ( "AccountEntity"."id" IN (3) ) -- PARAMETERS: [3]
AccountEntity {
  id: 3,
  username: 'tester',
  password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
  email: 'zdenek.srmcka@npicr.cz',
  firstname: 'Test',
  surname: 'Testovič',
  permissions: [],
  guarantee: GuaranteeEntity { id: 2 }
}
query: SELECT DISTINCT "distinctAlias"."GuaranteeEntity_id" as "ids_GuaranteeEntity_id" FROM (SELECT "GuaranteeEntity"."id" AS "GuaranteeEntity_id", "GuaranteeEntity"."accountId" AS "GuaranteeEntity_accountId", "GuaranteeEntity__account"."id" AS "GuaranteeEntity__account_id", "GuaranteeEntity__account"."username" AS "GuaranteeEntity__account_username", "GuaranteeEntity__account"."password" AS "GuaranteeEntity__account_password", "GuaranteeEntity__account"."email" AS "GuaranteeEntity__account_email", "GuaranteeEntity__account"."firstname" AS "GuaranteeEntity__account_firstname", "GuaranteeEntity__account"."surname" AS "GuaranteeEntity__account_surname", "GuaranteeEntity__regions"."id" AS "GuaranteeEntity__regions_id", "GuaranteeEntity__regions"."name" AS "GuaranteeEntity__regions_name", "GuaranteeEntity__regions"."contactPersonId" AS "GuaranteeEntity__regions_contactPersonId", "GuaranteeEntity__districts"."id" AS "GuaranteeEntity__districts_id", "GuaranteeEntity__districts"."name" AS "GuaranteeEntity__districts_name", "GuaranteeEntity__districts"."regionId" AS "GuaranteeEntity__districts_regionId", "GuaranteeEntity__districts"."contactPersonId" AS "GuaranteeEntity__districts_contactPersonId", "GuaranteeEntity__schools"."id" AS "GuaranteeEntity__schools_id", "GuaranteeEntity__schools"."name" AS "GuaranteeEntity__schools_name", "GuaranteeEntity__schools"."districtId" AS "GuaranteeEntity__schools_districtId", "GuaranteeEntity__schools"."contactPersonId" AS "GuaranteeEntity__schools_contactPersonId", "GuaranteeEntity__roundTypes"."id" AS "GuaranteeEntity__roundTypes_id", "GuaranteeEntity__roundTypes"."name" AS "GuaranteeEntity__roundTypes_name", "GuaranteeEntity__guaranteedRounds"."id" AS "GuaranteeEntity__guaranteedRounds_id", "GuaranteeEntity__guaranteedRounds"."roundStart" AS "GuaranteeEntity__guaranteedRounds_roundStart", "GuaranteeEntity__guaranteedRounds"."roundEnd" AS "GuaranteeEntity__guaranteedRounds_roundEnd", "GuaranteeEntity__guaranteedRounds"."nextRoundId" AS "GuaranteeEntity__guaranteedRounds_nextRoundId", "GuaranteeEntity__guaranteedRounds"."typeId" AS "GuaranteeEntity__guaranteedRounds_typeId", "GuaranteeEntity__guaranteedRounds"."yearId" AS "GuaranteeEntity__guaranteedRounds_yearId", "GuaranteeEntity__guaranteedRounds_type"."id" AS "GuaranteeEntity__guaranteedRounds_type_id", "GuaranteeEntity__guaranteedRounds_type"."name" AS "GuaranteeEntity__guaranteedRounds_type_name" FROM "guarantee" "GuaranteeEntity" LEFT JOIN "account" "GuaranteeEntity__account" ON "GuaranteeEntity__account"."id"="GuaranteeEntity"."accountId"  LEFT JOIN "guarantee_regions_region" "GuaranteeEntity_GuaranteeEntity__regions" ON "GuaranteeEntity_GuaranteeEntity__regions"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "region" "GuaranteeEntity__regions" ON "GuaranteeEntity__regions"."id"="GuaranteeEntity_GuaranteeEntity__regions"."regionId"  LEFT JOIN "guarantee_districts_district" "GuaranteeEntity_GuaranteeEntity__districts" ON "GuaranteeEntity_GuaranteeEntity__districts"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "district" "GuaranteeEntity__districts" ON "GuaranteeEntity__districts"."id"="GuaranteeEntity_GuaranteeEntity__districts"."districtId"  LEFT JOIN "guarantee_schools_school" "GuaranteeEntity_GuaranteeEntity__schools" ON "GuaranteeEntity_GuaranteeEntity__schools"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "school" "GuaranteeEntity__schools" ON "GuaranteeEntity__schools"."id"="GuaranteeEntity_GuaranteeEntity__schools"."schoolId"  LEFT JOIN "guarantee_round_types_round_type" "GuaranteeEntity_GuaranteeEntity__roundTypes" ON "GuaranteeEntity_GuaranteeEntity__roundTypes"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "roundType" "GuaranteeEntity__roundTypes" ON "GuaranteeEntity__roundTypes"."id"="GuaranteeEntity_GuaranteeEntity__roundTypes"."roundTypeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "GuaranteeEntity__guaranteedRounds_GuaranteeEntity" ON "GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "olympiadRound" "GuaranteeEntity__guaranteedRounds" ON "GuaranteeEntity__guaranteedRounds"."id"="GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."olympiadRoundId"  LEFT JOIN "roundType" "GuaranteeEntity__guaranteedRounds_type" ON "GuaranteeEntity__guaranteedRounds_type"."id"="GuaranteeEntity__guaranteedRounds"."typeId" WHERE "GuaranteeEntity"."id" = $1) "distinctAlias"  ORDER BY "GuaranteeEntity_id" ASC LIMIT 1 -- PARAMETERS: ["2"]
query: SELECT "GuaranteeEntity"."id" AS "GuaranteeEntity_id", "GuaranteeEntity"."accountId" AS "GuaranteeEntity_accountId", "GuaranteeEntity__account"."id" AS "GuaranteeEntity__account_id", "GuaranteeEntity__account"."username" AS "GuaranteeEntity__account_username", "GuaranteeEntity__account"."password" AS "GuaranteeEntity__account_password", "GuaranteeEntity__account"."email" AS "GuaranteeEntity__account_email", "GuaranteeEntity__account"."firstname" AS "GuaranteeEntity__account_firstname", "GuaranteeEntity__account"."surname" AS "GuaranteeEntity__account_surname", "GuaranteeEntity__regions"."id" AS "GuaranteeEntity__regions_id", "GuaranteeEntity__regions"."name" AS "GuaranteeEntity__regions_name", "GuaranteeEntity__regions"."contactPersonId" AS "GuaranteeEntity__regions_contactPersonId", "GuaranteeEntity__districts"."id" AS "GuaranteeEntity__districts_id", "GuaranteeEntity__districts"."name" AS "GuaranteeEntity__districts_name", "GuaranteeEntity__districts"."regionId" AS "GuaranteeEntity__districts_regionId", "GuaranteeEntity__districts"."contactPersonId" AS "GuaranteeEntity__districts_contactPersonId", "GuaranteeEntity__schools"."id" AS "GuaranteeEntity__schools_id", "GuaranteeEntity__schools"."name" AS "GuaranteeEntity__schools_name", "GuaranteeEntity__schools"."districtId" AS "GuaranteeEntity__schools_districtId", "GuaranteeEntity__schools"."contactPersonId" AS "GuaranteeEntity__schools_contactPersonId", "GuaranteeEntity__roundTypes"."id" AS "GuaranteeEntity__roundTypes_id", "GuaranteeEntity__roundTypes"."name" AS "GuaranteeEntity__roundTypes_name", "GuaranteeEntity__guaranteedRounds"."id" AS "GuaranteeEntity__guaranteedRounds_id", "GuaranteeEntity__guaranteedRounds"."roundStart" AS "GuaranteeEntity__guaranteedRounds_roundStart", "GuaranteeEntity__guaranteedRounds"."roundEnd" AS "GuaranteeEntity__guaranteedRounds_roundEnd", "GuaranteeEntity__guaranteedRounds"."nextRoundId" AS "GuaranteeEntity__guaranteedRounds_nextRoundId", "GuaranteeEntity__guaranteedRounds"."typeId" AS "GuaranteeEntity__guaranteedRounds_typeId", "GuaranteeEntity__guaranteedRounds"."yearId" AS "GuaranteeEntity__guaranteedRounds_yearId", "GuaranteeEntity__guaranteedRounds_type"."id" AS "GuaranteeEntity__guaranteedRounds_type_id", "GuaranteeEntity__guaranteedRounds_type"."name" AS "GuaranteeEntity__guaranteedRounds_type_name" FROM "guarantee" "GuaranteeEntity" LEFT JOIN "account" "GuaranteeEntity__account" ON "GuaranteeEntity__account"."id"="GuaranteeEntity"."accountId"  LEFT JOIN "guarantee_regions_region" "GuaranteeEntity_GuaranteeEntity__regions" ON "GuaranteeEntity_GuaranteeEntity__regions"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "region" "GuaranteeEntity__regions" ON "GuaranteeEntity__regions"."id"="GuaranteeEntity_GuaranteeEntity__regions"."regionId"  LEFT JOIN "guarantee_districts_district" "GuaranteeEntity_GuaranteeEntity__districts" ON "GuaranteeEntity_GuaranteeEntity__districts"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "district" "GuaranteeEntity__districts" ON "GuaranteeEntity__districts"."id"="GuaranteeEntity_GuaranteeEntity__districts"."districtId"  LEFT JOIN "guarantee_schools_school" "GuaranteeEntity_GuaranteeEntity__schools" ON "GuaranteeEntity_GuaranteeEntity__schools"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "school" "GuaranteeEntity__schools" ON "GuaranteeEntity__schools"."id"="GuaranteeEntity_GuaranteeEntity__schools"."schoolId"  LEFT JOIN "guarantee_round_types_round_type" "GuaranteeEntity_GuaranteeEntity__roundTypes" ON "GuaranteeEntity_GuaranteeEntity__roundTypes"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "roundType" "GuaranteeEntity__roundTypes" ON "GuaranteeEntity__roundTypes"."id"="GuaranteeEntity_GuaranteeEntity__roundTypes"."roundTypeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "GuaranteeEntity__guaranteedRounds_GuaranteeEntity" ON "GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "olympiadRound" "GuaranteeEntity__guaranteedRounds" ON "GuaranteeEntity__guaranteedRounds"."id"="GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."olympiadRoundId"  LEFT JOIN "roundType" "GuaranteeEntity__guaranteedRounds_type" ON "GuaranteeEntity__guaranteedRounds_type"."id"="GuaranteeEntity__guaranteedRounds"."typeId" WHERE ( "GuaranteeEntity"."id" = $1 ) AND ( "GuaranteeEntity"."id" IN (2) ) -- PARAMETERS: ["2"]
GuaranteeEntity {
  id: 2,
  account: AccountEntity {
    id: 3,
    username: 'tester',
    password: '9bba5c53a0545e0c80184b946153c9f58387e3bd1d4ee35740f29ac2e718b019',
    email: 'zdenek.srmcka@npicr.cz',
    firstname: 'Test',
    surname: 'Testovič'
  },
  regions: [],
  districts: [],
  schools: [],
  roundTypes: [],
  guaranteedRounds: []
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."PostEntity_id" as "ids_PostEntity_id" FROM (SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE "PostEntity"."id" = $1) "distinctAlias"  ORDER BY "PostEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE ( "PostEntity"."id" = $1 ) AND ( "PostEntity"."id" IN (1) ) -- PARAMETERS: [1]
PostEntity {
  id: 1,
  title: 'Úvodní slovo k olympiádě',
  content: 'Dějepisná olympiáda (DĚO) je soutěž vycházející z obsahu vzdělávacího oboru dějepis v rámcových vzdělávacích programech a organizovaná jako cílevědomá vzdělávací aktivita založená na systematické práci s talentovanými žáky zejména 8. a 9. ročníků základních škol, 3. a 4. ročníků osmiletých gymnázií, 1. a 2. ročníků šestiletých gymnázií.\n' +
    '\n' +
    'Dějepisná olympiáda je postupovou soutěží, má 1 kategorii a člení se podle soutěžních kol (školní, okresní, krajské a celostátní). Soutěž je jednotná pro celé území České republiky a pořádá se každoročně. Každý ročník má jiné tematické zaměření, jednotné pro všechna postupová kola, jež se liší jen svou náročností. Zadání pro jednotlivá kola vytváří ústřední komise DĚO. \n' +
    '<br>\n' +
    'zdroj: http://vtp.talentovani.cz/dejepisna-olympiada',
  active: 0,
  lastModified: 2020-08-12T12:36:24.884Z,
  created: 2020-08-12T12:36:24.884Z,
  author: AccountEntity {
    id: 1,
    username: 'admin',
    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',
    email: 'email@seznam.cz',
    firstname: 'admin1',
    surname: 'admin2'
  }
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."PostEntity_id" as "ids_PostEntity_id" FROM (SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE "PostEntity"."id" = $1) "distinctAlias"  ORDER BY "PostEntity_id" ASC LIMIT 1 -- PARAMETERS: [2]
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId" WHERE ( "PostEntity"."id" = $1 ) AND ( "PostEntity"."id" IN (2) ) -- PARAMETERS: [2]
PostEntity {
  id: 2,
  title: 'Pokusný článek',
  content: 'Toto je pokuný článek s tím, že chci vědět, jestli se dá text formátovat, případně vložit odkazy z něj někam ... a taky, kam se zařadí na webu. \n' +
    'ˇAha, tak už vše vím...mohly by se články řadit podle data publikování naopak, tedy aby byly poslední články nahoře ... \n' +
    'A taky nevím, kolik znaků se objevuje v perexu a kolik je skryto pod tlačítkem VÍCE...:-) ',
  active: 0,
  lastModified: 2020-09-24T17:27:50.097Z,
  created: 2020-09-24T17:24:26.848Z,
  author: AccountEntity {
    id: 1,
    username: 'admin',
    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',
    email: 'email@seznam.cz',
    firstname: 'admin1',
    surname: 'admin2'
  }
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId"
query: SELECT DISTINCT "distinctAlias"."OlympiadYearEntity_id" as "ids_OlympiadYearEntity_id" FROM (SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId" WHERE "OlympiadYearEntity"."id" = $1) "distinctAlias"  ORDER BY "OlympiadYearEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId" WHERE ( "OlympiadYearEntity"."id" = $1 ) AND ( "OlympiadYearEntity"."id" IN (1) ) -- PARAMETERS: [1]
OlympiadYearEntity {
  id: 1,
  name: 'Dlouhé století se loučí',
  year: 2019,
  description: '1880-1920',
  openToPublic: true,
  registrationDeadline: '2020-10-16',
  rounds: [
    OlympiadRoundEntity {
      id: 1,
      roundStart: '2020-12-12',
      roundEnd: '2021-06-16',
      type: [RoundTypeEntity],
      nextRound: null
    }
  ]
}
query: SELECT "RoundTypeEntity"."id" AS "RoundTypeEntity_id", "RoundTypeEntity"."name" AS "RoundTypeEntity_name" FROM "roundType" "RoundTypeEntity"
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: UPDATE "olympiadYear" SET "id" = $2, "name" = $3, "year" = $4, "description" = $5, "openToPublic" = $6, "registrationDeadline" = $7 WHERE "id" IN ($1) -- PARAMETERS: [1,1,"Dlouhé století se loučí",2019,"1880-1920",0,"2020-10-16"]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: UPDATE "olympiadYear" SET "id" = $2, "name" = $3, "year" = $4, "description" = $5, "openToPublic" = $6, "registrationDeadline" = $7 WHERE "id" IN ($1) -- PARAMETERS: [1,1,"Dlouhé století se loučí",2019,"1880-1920",1,"2020-10-16"]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: UPDATE "olympiadYear" SET "id" = $2, "name" = $3, "year" = $4, "description" = $5, "openToPublic" = $6, "registrationDeadline" = $7 WHERE "id" IN ($1) -- PARAMETERS: [1,1,"Dlouhé století se loučí",2019,"1880-1920",0,"2020-10-16"]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'guarantee', 'admin' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
1
----------------------------------------------------------------
query: SELECT DISTINCT "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "district"."id" AS "district_id", "district"."name" AS "district_name", "district"."regionId" AS "district_regionId", "district"."contactPersonId" AS "district_contactPersonId", "region"."id" AS "region_id", "region"."name" AS "region_name", "region"."contactPersonId" AS "region_contactPersonId", "accessCode"."id" AS "accessCode_id", "accessCode"."code" AS "accessCode_code", "accessCode"."activated" AS "accessCode_activated", "accessCode"."testStart" AS "accessCode_testStart", "accessCode"."evaluated" AS "accessCode_evaluated", "accessCode"."contestantId" AS "accessCode_contestantId", "accessCode"."roundId" AS "accessCode_roundId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "type"."id" AS "type_id", "type"."name" AS "type_name" FROM "contestant" "contestant" LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "guarantee_schools_school" "schoolG_school" ON "schoolG_school"."schoolId"="school"."id" LEFT JOIN "guarantee" "schoolG" ON "schoolG"."id"="schoolG_school"."guaranteeId"  LEFT JOIN "district" "district" ON "district"."id"="school"."districtId"  LEFT JOIN "guarantee_districts_district" "districtG_district" ON "districtG_district"."districtId"="district"."id" LEFT JOIN "guarantee" "districtG" ON "districtG"."id"="districtG_district"."guaranteeId"  LEFT JOIN "region" "region" ON "region"."id"="district"."regionId"  LEFT JOIN "guarantee_regions_region" "regionG_region" ON "regionG_region"."regionId"="region"."id" LEFT JOIN "guarantee" "regionG" ON "regionG"."id"="regionG_region"."guaranteeId"  LEFT JOIN "accessCode" "accessCode" ON "accessCode"."contestantId"="contestant"."id"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="accessCode"."roundId"  LEFT JOIN "roundType" "type" ON "type"."id"="round"."typeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "round_roundG" ON "round_roundG"."olympiadRoundId"="round"."id" LEFT JOIN "guarantee" "roundG" ON "roundG"."id"="round_roundG"."guaranteeId"  LEFT JOIN "guarantee_round_types_round_type" "typeG_type" ON "typeG_type"."roundTypeId"="type"."id" LEFT JOIN "guarantee" "typeG" ON "typeG"."id"="typeG_type"."guaranteeId" WHERE "schoolG"."id" = $1 OR "districtG"."id" = $2 OR "regionG"."id" = $3 OR "roundG"."id" = $4 OR "typeG"."id" = $5 -- PARAMETERS: [1,1,1,1,1]
[
  ContestantEntity {
    id: 1,
    firstname: 'Dan',
    surname: 'Novotný',
    email: 'novy@seznam.cz',
    birthdate: '2006-06-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 2,
    firstname: 'Petra',
    surname: 'Nová',
    email: 'nova@email.com',
    birthdate: '2008-05-14',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  },
  ContestantEntity {
    id: 3,
    firstname: 'Adam',
    surname: 'Pavel',
    email: 'pavel@seznam.cz',
    birthdate: '2008-05-07',
    classNum: 2,
    school: SchoolEntity {
      id: 2,
      name: 'ZS Liberec',
      district: [DistrictEntity]
    },
    accessCodes: [ [AccessCodeEntity] ]
  }
]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId"
query: SELECT "SchoolEntity"."id" AS "SchoolEntity_id", "SchoolEntity"."name" AS "SchoolEntity_name", "SchoolEntity"."districtId" AS "SchoolEntity_districtId", "SchoolEntity"."contactPersonId" AS "SchoolEntity_contactPersonId", "SchoolEntity__contactPerson"."id" AS "SchoolEntity__contactPerson_id", "SchoolEntity__contactPerson"."firstname" AS "SchoolEntity__contactPerson_firstname", "SchoolEntity__contactPerson"."surname" AS "SchoolEntity__contactPerson_surname", "SchoolEntity__contactPerson"."phone" AS "SchoolEntity__contactPerson_phone", "SchoolEntity__contactPerson"."email" AS "SchoolEntity__contactPerson_email" FROM "school" "SchoolEntity" LEFT JOIN "contactPerson" "SchoolEntity__contactPerson" ON "SchoolEntity__contactPerson"."id"="SchoolEntity"."contactPersonId"
query: SELECT DISTINCT "distinctAlias"."GuaranteeEntity_id" as "ids_GuaranteeEntity_id" FROM (SELECT "GuaranteeEntity"."id" AS "GuaranteeEntity_id", "GuaranteeEntity"."accountId" AS "GuaranteeEntity_accountId", "GuaranteeEntity__account"."id" AS "GuaranteeEntity__account_id", "GuaranteeEntity__account"."username" AS "GuaranteeEntity__account_username", "GuaranteeEntity__account"."password" AS "GuaranteeEntity__account_password", "GuaranteeEntity__account"."email" AS "GuaranteeEntity__account_email", "GuaranteeEntity__account"."firstname" AS "GuaranteeEntity__account_firstname", "GuaranteeEntity__account"."surname" AS "GuaranteeEntity__account_surname", "GuaranteeEntity__regions"."id" AS "GuaranteeEntity__regions_id", "GuaranteeEntity__regions"."name" AS "GuaranteeEntity__regions_name", "GuaranteeEntity__regions"."contactPersonId" AS "GuaranteeEntity__regions_contactPersonId", "GuaranteeEntity__districts"."id" AS "GuaranteeEntity__districts_id", "GuaranteeEntity__districts"."name" AS "GuaranteeEntity__districts_name", "GuaranteeEntity__districts"."regionId" AS "GuaranteeEntity__districts_regionId", "GuaranteeEntity__districts"."contactPersonId" AS "GuaranteeEntity__districts_contactPersonId", "GuaranteeEntity__schools"."id" AS "GuaranteeEntity__schools_id", "GuaranteeEntity__schools"."name" AS "GuaranteeEntity__schools_name", "GuaranteeEntity__schools"."districtId" AS "GuaranteeEntity__schools_districtId", "GuaranteeEntity__schools"."contactPersonId" AS "GuaranteeEntity__schools_contactPersonId", "GuaranteeEntity__roundTypes"."id" AS "GuaranteeEntity__roundTypes_id", "GuaranteeEntity__roundTypes"."name" AS "GuaranteeEntity__roundTypes_name", "GuaranteeEntity__guaranteedRounds"."id" AS "GuaranteeEntity__guaranteedRounds_id", "GuaranteeEntity__guaranteedRounds"."roundStart" AS "GuaranteeEntity__guaranteedRounds_roundStart", "GuaranteeEntity__guaranteedRounds"."roundEnd" AS "GuaranteeEntity__guaranteedRounds_roundEnd", "GuaranteeEntity__guaranteedRounds"."nextRoundId" AS "GuaranteeEntity__guaranteedRounds_nextRoundId", "GuaranteeEntity__guaranteedRounds"."typeId" AS "GuaranteeEntity__guaranteedRounds_typeId", "GuaranteeEntity__guaranteedRounds"."yearId" AS "GuaranteeEntity__guaranteedRounds_yearId", "GuaranteeEntity__guaranteedRounds_type"."id" AS "GuaranteeEntity__guaranteedRounds_type_id", "GuaranteeEntity__guaranteedRounds_type"."name" AS "GuaranteeEntity__guaranteedRounds_type_name" FROM "guarantee" "GuaranteeEntity" LEFT JOIN "account" "GuaranteeEntity__account" ON "GuaranteeEntity__account"."id"="GuaranteeEntity"."accountId"  LEFT JOIN "guarantee_regions_region" "GuaranteeEntity_GuaranteeEntity__regions" ON "GuaranteeEntity_GuaranteeEntity__regions"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "region" "GuaranteeEntity__regions" ON "GuaranteeEntity__regions"."id"="GuaranteeEntity_GuaranteeEntity__regions"."regionId"  LEFT JOIN "guarantee_districts_district" "GuaranteeEntity_GuaranteeEntity__districts" ON "GuaranteeEntity_GuaranteeEntity__districts"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "district" "GuaranteeEntity__districts" ON "GuaranteeEntity__districts"."id"="GuaranteeEntity_GuaranteeEntity__districts"."districtId"  LEFT JOIN "guarantee_schools_school" "GuaranteeEntity_GuaranteeEntity__schools" ON "GuaranteeEntity_GuaranteeEntity__schools"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "school" "GuaranteeEntity__schools" ON "GuaranteeEntity__schools"."id"="GuaranteeEntity_GuaranteeEntity__schools"."schoolId"  LEFT JOIN "guarantee_round_types_round_type" "GuaranteeEntity_GuaranteeEntity__roundTypes" ON "GuaranteeEntity_GuaranteeEntity__roundTypes"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "roundType" "GuaranteeEntity__roundTypes" ON "GuaranteeEntity__roundTypes"."id"="GuaranteeEntity_GuaranteeEntity__roundTypes"."roundTypeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "GuaranteeEntity__guaranteedRounds_GuaranteeEntity" ON "GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "olympiadRound" "GuaranteeEntity__guaranteedRounds" ON "GuaranteeEntity__guaranteedRounds"."id"="GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."olympiadRoundId"  LEFT JOIN "roundType" "GuaranteeEntity__guaranteedRounds_type" ON "GuaranteeEntity__guaranteedRounds_type"."id"="GuaranteeEntity__guaranteedRounds"."typeId" WHERE "GuaranteeEntity"."id" = $1) "distinctAlias"  ORDER BY "GuaranteeEntity_id" ASC LIMIT 1 -- PARAMETERS: ["1"]
query: SELECT "GuaranteeEntity"."id" AS "GuaranteeEntity_id", "GuaranteeEntity"."accountId" AS "GuaranteeEntity_accountId", "GuaranteeEntity__account"."id" AS "GuaranteeEntity__account_id", "GuaranteeEntity__account"."username" AS "GuaranteeEntity__account_username", "GuaranteeEntity__account"."password" AS "GuaranteeEntity__account_password", "GuaranteeEntity__account"."email" AS "GuaranteeEntity__account_email", "GuaranteeEntity__account"."firstname" AS "GuaranteeEntity__account_firstname", "GuaranteeEntity__account"."surname" AS "GuaranteeEntity__account_surname", "GuaranteeEntity__regions"."id" AS "GuaranteeEntity__regions_id", "GuaranteeEntity__regions"."name" AS "GuaranteeEntity__regions_name", "GuaranteeEntity__regions"."contactPersonId" AS "GuaranteeEntity__regions_contactPersonId", "GuaranteeEntity__districts"."id" AS "GuaranteeEntity__districts_id", "GuaranteeEntity__districts"."name" AS "GuaranteeEntity__districts_name", "GuaranteeEntity__districts"."regionId" AS "GuaranteeEntity__districts_regionId", "GuaranteeEntity__districts"."contactPersonId" AS "GuaranteeEntity__districts_contactPersonId", "GuaranteeEntity__schools"."id" AS "GuaranteeEntity__schools_id", "GuaranteeEntity__schools"."name" AS "GuaranteeEntity__schools_name", "GuaranteeEntity__schools"."districtId" AS "GuaranteeEntity__schools_districtId", "GuaranteeEntity__schools"."contactPersonId" AS "GuaranteeEntity__schools_contactPersonId", "GuaranteeEntity__roundTypes"."id" AS "GuaranteeEntity__roundTypes_id", "GuaranteeEntity__roundTypes"."name" AS "GuaranteeEntity__roundTypes_name", "GuaranteeEntity__guaranteedRounds"."id" AS "GuaranteeEntity__guaranteedRounds_id", "GuaranteeEntity__guaranteedRounds"."roundStart" AS "GuaranteeEntity__guaranteedRounds_roundStart", "GuaranteeEntity__guaranteedRounds"."roundEnd" AS "GuaranteeEntity__guaranteedRounds_roundEnd", "GuaranteeEntity__guaranteedRounds"."nextRoundId" AS "GuaranteeEntity__guaranteedRounds_nextRoundId", "GuaranteeEntity__guaranteedRounds"."typeId" AS "GuaranteeEntity__guaranteedRounds_typeId", "GuaranteeEntity__guaranteedRounds"."yearId" AS "GuaranteeEntity__guaranteedRounds_yearId", "GuaranteeEntity__guaranteedRounds_type"."id" AS "GuaranteeEntity__guaranteedRounds_type_id", "GuaranteeEntity__guaranteedRounds_type"."name" AS "GuaranteeEntity__guaranteedRounds_type_name" FROM "guarantee" "GuaranteeEntity" LEFT JOIN "account" "GuaranteeEntity__account" ON "GuaranteeEntity__account"."id"="GuaranteeEntity"."accountId"  LEFT JOIN "guarantee_regions_region" "GuaranteeEntity_GuaranteeEntity__regions" ON "GuaranteeEntity_GuaranteeEntity__regions"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "region" "GuaranteeEntity__regions" ON "GuaranteeEntity__regions"."id"="GuaranteeEntity_GuaranteeEntity__regions"."regionId"  LEFT JOIN "guarantee_districts_district" "GuaranteeEntity_GuaranteeEntity__districts" ON "GuaranteeEntity_GuaranteeEntity__districts"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "district" "GuaranteeEntity__districts" ON "GuaranteeEntity__districts"."id"="GuaranteeEntity_GuaranteeEntity__districts"."districtId"  LEFT JOIN "guarantee_schools_school" "GuaranteeEntity_GuaranteeEntity__schools" ON "GuaranteeEntity_GuaranteeEntity__schools"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "school" "GuaranteeEntity__schools" ON "GuaranteeEntity__schools"."id"="GuaranteeEntity_GuaranteeEntity__schools"."schoolId"  LEFT JOIN "guarantee_round_types_round_type" "GuaranteeEntity_GuaranteeEntity__roundTypes" ON "GuaranteeEntity_GuaranteeEntity__roundTypes"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "roundType" "GuaranteeEntity__roundTypes" ON "GuaranteeEntity__roundTypes"."id"="GuaranteeEntity_GuaranteeEntity__roundTypes"."roundTypeId"  LEFT JOIN "olympiad_round_guarantees_guarantee" "GuaranteeEntity__guaranteedRounds_GuaranteeEntity" ON "GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."guaranteeId"="GuaranteeEntity"."id" LEFT JOIN "olympiadRound" "GuaranteeEntity__guaranteedRounds" ON "GuaranteeEntity__guaranteedRounds"."id"="GuaranteeEntity__guaranteedRounds_GuaranteeEntity"."olympiadRoundId"  LEFT JOIN "roundType" "GuaranteeEntity__guaranteedRounds_type" ON "GuaranteeEntity__guaranteedRounds_type"."id"="GuaranteeEntity__guaranteedRounds"."typeId" WHERE ( "GuaranteeEntity"."id" = $1 ) AND ( "GuaranteeEntity"."id" IN (1) ) -- PARAMETERS: ["1"]
GuaranteeEntity {
  id: 1,
  account: AccountEntity {
    id: 1,
    username: 'admin',
    password: '5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8',
    email: 'email@seznam.cz',
    firstname: 'admin1',
    surname: 'admin2'
  },
  regions: [
    RegionEntity { id: 1, name: 'Karlovarsky' },
    RegionEntity { id: 2, name: 'Liberecky' },
    RegionEntity { id: 3, name: 'Praha' }
  ],
  districts: [
    DistrictEntity { id: 1, name: 'Karlovy Vary' },
    DistrictEntity { id: 2, name: 'Liberec' },
    DistrictEntity { id: 3, name: 'Praha 4' }
  ],
  schools: [
    SchoolEntity { id: 1, name: 'ZS Karlovy Vary' },
    SchoolEntity { id: 2, name: 'ZS Liberec' },
    SchoolEntity { id: 3, name: 'ZS Praha 4' }
  ],
  roundTypes: [ RoundTypeEntity { id: 1, name: 'skolni' } ],
  guaranteedRounds: []
}
JwtAccessStrategy
JwtAccessAuthGuard
RolesGuard
[ 'admin', 'guarantee' ]
{
  username: 'admin',
  id: 1,
  guarantee: { id: 1 },
  permissions: [
    { id: 1, name: 'admin' },
    { id: 3, name: 'creator' },
    { id: 2, name: 'evaluator' }
  ]
}
query: SELECT "SchoolEntity"."id" AS "SchoolEntity_id", "SchoolEntity"."name" AS "SchoolEntity_name", "SchoolEntity"."districtId" AS "SchoolEntity_districtId", "SchoolEntity"."contactPersonId" AS "SchoolEntity_contactPersonId" FROM "school" "SchoolEntity" WHERE "SchoolEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [-1]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId"
query: SELECT DISTINCT "distinctAlias"."OlympiadYearEntity_id" as "ids_OlympiadYearEntity_id" FROM (SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId" WHERE "OlympiadYearEntity"."id" = $1) "distinctAlias"  ORDER BY "OlympiadYearEntity_id" ASC LIMIT 1 -- PARAMETERS: [1]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId" WHERE ( "OlympiadYearEntity"."id" = $1 ) AND ( "OlympiadYearEntity"."id" IN (1) ) -- PARAMETERS: [1]
OlympiadYearEntity {
  id: 1,
  name: 'Dlouhé století se loučí',
  year: 2019,
  description: '1880-1920',
  openToPublic: false,
  registrationDeadline: '2020-10-16',
  rounds: [
    OlympiadRoundEntity {
      id: 1,
      roundStart: '2020-12-12',
      roundEnd: '2021-06-16',
      type: [RoundTypeEntity],
      nextRound: null
    }
  ]
}
query: SELECT "RoundTypeEntity"."id" AS "RoundTypeEntity_id", "RoundTypeEntity"."name" AS "RoundTypeEntity_name" FROM "roundType" "RoundTypeEntity"
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: UPDATE "olympiadYear" SET "id" = $2, "name" = $3, "year" = $4, "description" = $5, "openToPublic" = $6, "registrationDeadline" = $7 WHERE "id" IN ($1) -- PARAMETERS: [1,1,"Dlouhé století se loučí",2019,"1880-1920",1,"2020-10-16"]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline" FROM "olympiadYear" "OlympiadYearEntity" WHERE "OlympiadYearEntity"."id" = $1 LIMIT 1 -- PARAMETERS: [1]
query: SELECT "OlympiadYearEntity"."id" AS "OlympiadYearEntity_id", "OlympiadYearEntity"."name" AS "OlympiadYearEntity_name", "OlympiadYearEntity"."year" AS "OlympiadYearEntity_year", "OlympiadYearEntity"."description" AS "OlympiadYearEntity_description", "OlympiadYearEntity"."openToPublic" AS "OlympiadYearEntity_openToPublic", "OlympiadYearEntity"."registrationDeadline" AS "OlympiadYearEntity_registrationDeadline", "OlympiadYearEntity__rounds"."id" AS "OlympiadYearEntity__rounds_id", "OlympiadYearEntity__rounds"."roundStart" AS "OlympiadYearEntity__rounds_roundStart", "OlympiadYearEntity__rounds"."roundEnd" AS "OlympiadYearEntity__rounds_roundEnd", "OlympiadYearEntity__rounds"."nextRoundId" AS "OlympiadYearEntity__rounds_nextRoundId", "OlympiadYearEntity__rounds"."typeId" AS "OlympiadYearEntity__rounds_typeId", "OlympiadYearEntity__rounds"."yearId" AS "OlympiadYearEntity__rounds_yearId", "OlympiadYearEntity__rounds_type"."id" AS "OlympiadYearEntity__rounds_type_id", "OlympiadYearEntity__rounds_type"."name" AS "OlympiadYearEntity__rounds_type_name", "OlympiadYearEntity__rounds__nextRound"."id" AS "OlympiadYearEntity__rounds__nextRound_id", "OlympiadYearEntity__rounds__nextRound"."roundStart" AS "OlympiadYearEntity__rounds__nextRound_roundStart", "OlympiadYearEntity__rounds__nextRound"."roundEnd" AS "OlympiadYearEntity__rounds__nextRound_roundEnd", "OlympiadYearEntity__rounds__nextRound"."nextRoundId" AS "OlympiadYearEntity__rounds__nextRound_nextRoundId", "OlympiadYearEntity__rounds__nextRound"."typeId" AS "OlympiadYearEntity__rounds__nextRound_typeId", "OlympiadYearEntity__rounds__nextRound"."yearId" AS "OlympiadYearEntity__rounds__nextRound_yearId", "OlympiadYearEntity__rounds__nextRound_type"."id" AS "OlympiadYearEntity__rounds__nextRound_type_id", "OlympiadYearEntity__rounds__nextRound_type"."name" AS "OlympiadYearEntity__rounds__nextRound_type_name", "OlympiadYearEntity__rounds__type"."id" AS "OlympiadYearEntity__rounds__type_id", "OlympiadYearEntity__rounds__type"."name" AS "OlympiadYearEntity__rounds__type_name" FROM "olympiadYear" "OlympiadYearEntity" LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds" ON "OlympiadYearEntity__rounds"."yearId"="OlympiadYearEntity"."id"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds_type" ON "OlympiadYearEntity__rounds_type"."id"="OlympiadYearEntity__rounds"."typeId"  LEFT JOIN "olympiadRound" "OlympiadYearEntity__rounds__nextRound" ON "OlympiadYearEntity__rounds__nextRound"."id"="OlympiadYearEntity__rounds"."nextRoundId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__nextRound_type" ON "OlympiadYearEntity__rounds__nextRound_type"."id"="OlympiadYearEntity__rounds__nextRound"."typeId"  LEFT JOIN "roundType" "OlympiadYearEntity__rounds__type" ON "OlympiadYearEntity__rounds__type"."id"="OlympiadYearEntity__rounds"."typeId"
query: SELECT "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "contestant"."id" AS "contestant_id", "contestant"."firstname" AS "contestant_firstname", "contestant"."surname" AS "contestant_surname", "contestant"."email" AS "contestant_email", "contestant"."birthdate" AS "contestant_birthdate", "contestant"."classNum" AS "contestant_classNum", "contestant"."schoolId" AS "contestant_schoolId", "round"."id" AS "round_id", "round"."roundStart" AS "round_roundStart", "round"."roundEnd" AS "round_roundEnd", "round"."nextRoundId" AS "round_nextRoundId", "round"."typeId" AS "round_typeId", "round"."yearId" AS "round_yearId", "year"."id" AS "year_id", "year"."name" AS "year_name", "year"."year" AS "year_year", "year"."description" AS "year_description", "year"."openToPublic" AS "year_openToPublic", "year"."registrationDeadline" AS "year_registrationDeadline", "school"."id" AS "school_id", "school"."name" AS "school_name", "school"."districtId" AS "school_districtId", "school"."contactPersonId" AS "school_contactPersonId", "answeredQuestions"."id" AS "answeredQuestions_id", "answeredQuestions"."answer" AS "answeredQuestions_answer", "answeredQuestions"."lastModified" AS "answeredQuestions_lastModified", "answeredQuestions"."created" AS "answeredQuestions_created", "answeredQuestions"."accessCodeId" AS "answeredQuestions_accessCodeId", "answeredQuestions"."questionId" AS "answeredQuestions_questionId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "test"."id" AS "test_id", "test"."timeLimit" AS "test_timeLimit", "test"."closed" AS "test_closed", "test"."lastModified" AS "test_lastModified", "test"."created" AS "test_created", "test"."roundId" AS "test_roundId", "test"."categoryId" AS "test_categoryId", "category"."id" AS "category_id", "category"."name" AS "category_name", "category"."classMin" AS "category_classMin", "category"."classMax" AS "category_classMax" FROM "accessCode" "code" LEFT JOIN "contestant" "contestant" ON "contestant"."id"="code"."contestantId"  LEFT JOIN "olympiadRound" "round" ON "round"."id"="code"."roundId"  LEFT JOIN "olympiadYear" "year" ON "year"."id"="round"."yearId"  LEFT JOIN "school" "school" ON "school"."id"="contestant"."schoolId"  LEFT JOIN "answeredQuestion" "answeredQuestions" ON "answeredQuestions"."accessCodeId"="code"."id"  LEFT JOIN "question" "question" ON "question"."id"="answeredQuestions"."questionId"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answeredQuestions"."id"  LEFT JOIN "test" "test" ON "test"."id"="question"."testId"  LEFT JOIN "category" "category" ON "category"."id"="test"."categoryId" WHERE "code"."activated" IS NOT null AND "code"."testStart" IS NOT null AND "code"."evaluated" IS NOT null
query: SELECT "answers"."id" AS "answers_id", "answers"."answer" AS "answers_answer", "answers"."lastModified" AS "answers_lastModified", "answers"."created" AS "answers_created", "answers"."accessCodeId" AS "answers_accessCodeId", "answers"."questionId" AS "answers_questionId", "code"."id" AS "code_id", "code"."code" AS "code_code", "code"."activated" AS "code_activated", "code"."testStart" AS "code_testStart", "code"."evaluated" AS "code_evaluated", "code"."contestantId" AS "code_contestantId", "code"."roundId" AS "code_roundId", "question"."id" AS "question_id", "question"."task" AS "question_task", "question"."points" AS "question_points", "question"."orderNum" AS "question_orderNum", "question"."img" AS "question_img", "question"."lastModified" AS "question_lastModified", "question"."created" AS "question_created", "question"."typeId" AS "question_typeId", "question"."testId" AS "question_testId", "options"."id" AS "options_id", "options"."content" AS "options_content", "options"."img" AS "options_img", "options"."correct" AS "options_correct", "options"."questionId" AS "options_questionId", "evaluation"."id" AS "evaluation_id", "evaluation"."points" AS "evaluation_points", "evaluation"."note" AS "evaluation_note", "evaluation"."closed" AS "evaluation_closed", "evaluation"."created" AS "evaluation_created", "evaluation"."lastModified" AS "evaluation_lastModified", "evaluation"."evaluatorId" AS "evaluation_evaluatorId", "evaluation"."answeredQuestionId" AS "evaluation_answeredQuestionId", "type"."id" AS "type_id", "type"."type" AS "type_type", "type"."serverEvaluation" AS "type_serverEvaluation" FROM "answeredQuestion" "answers" LEFT JOIN "accessCode" "code" ON "code"."id"="answers"."accessCodeId"  LEFT JOIN "question" "question" ON "question"."id"="answers"."questionId"  LEFT JOIN "questionOption" "options" ON "options"."questionId"="question"."id"  LEFT JOIN "evaluatedQuestion" "evaluation" ON "evaluation"."answeredQuestionId"="answers"."id"  LEFT JOIN "questionType" "type" ON "type"."id"="question"."typeId" WHERE "code"."id" = $1 -- PARAMETERS: [2]
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT DISTINCT "distinctAlias"."TestEntity_id" as "ids_TestEntity_id" FROM (SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE "TestEntity"."id" = $1) "distinctAlias"  ORDER BY "TestEntity_id" ASC LIMIT 1 -- PARAMETERS: [10000]
query: SELECT "TestEntity"."id" AS "TestEntity_id", "TestEntity"."timeLimit" AS "TestEntity_timeLimit", "TestEntity"."closed" AS "TestEntity_closed", "TestEntity"."lastModified" AS "TestEntity_lastModified", "TestEntity"."created" AS "TestEntity_created", "TestEntity"."roundId" AS "TestEntity_roundId", "TestEntity"."categoryId" AS "TestEntity_categoryId", "TestEntity_category"."id" AS "TestEntity_category_id", "TestEntity_category"."name" AS "TestEntity_category_name", "TestEntity_category"."classMin" AS "TestEntity_category_classMin", "TestEntity_category"."classMax" AS "TestEntity_category_classMax", "TestEntity_questions"."id" AS "TestEntity_questions_id", "TestEntity_questions"."task" AS "TestEntity_questions_task", "TestEntity_questions"."points" AS "TestEntity_questions_points", "TestEntity_questions"."orderNum" AS "TestEntity_questions_orderNum", "TestEntity_questions"."img" AS "TestEntity_questions_img", "TestEntity_questions"."lastModified" AS "TestEntity_questions_lastModified", "TestEntity_questions"."created" AS "TestEntity_questions_created", "TestEntity_questions"."typeId" AS "TestEntity_questions_typeId", "TestEntity_questions"."testId" AS "TestEntity_questions_testId", "TestEntity_questions_options"."id" AS "TestEntity_questions_options_id", "TestEntity_questions_options"."content" AS "TestEntity_questions_options_content", "TestEntity_questions_options"."img" AS "TestEntity_questions_options_img", "TestEntity_questions_options"."correct" AS "TestEntity_questions_options_correct", "TestEntity_questions_options"."questionId" AS "TestEntity_questions_options_questionId", "TestEntity_questions_type"."id" AS "TestEntity_questions_type_id", "TestEntity_questions_type"."type" AS "TestEntity_questions_type_type", "TestEntity_questions_type"."serverEvaluation" AS "TestEntity_questions_type_serverEvaluation", "TestEntity__round"."id" AS "TestEntity__round_id", "TestEntity__round"."roundStart" AS "TestEntity__round_roundStart", "TestEntity__round"."roundEnd" AS "TestEntity__round_roundEnd", "TestEntity__round"."nextRoundId" AS "TestEntity__round_nextRoundId", "TestEntity__round"."typeId" AS "TestEntity__round_typeId", "TestEntity__round"."yearId" AS "TestEntity__round_yearId", "TestEntity__round_type"."id" AS "TestEntity__round_type_id", "TestEntity__round_type"."name" AS "TestEntity__round_type_name", "TestEntity__round__year"."id" AS "TestEntity__round__year_id", "TestEntity__round__year"."name" AS "TestEntity__round__year_name", "TestEntity__round__year"."year" AS "TestEntity__round__year_year", "TestEntity__round__year"."description" AS "TestEntity__round__year_description", "TestEntity__round__year"."openToPublic" AS "TestEntity__round__year_openToPublic", "TestEntity__round__year"."registrationDeadline" AS "TestEntity__round__year_registrationDeadline" FROM "test" "TestEntity" LEFT JOIN "category" "TestEntity_category" ON "TestEntity_category"."id"="TestEntity"."categoryId"  LEFT JOIN "question" "TestEntity_questions" ON "TestEntity_questions"."testId"="TestEntity"."id"  LEFT JOIN "questionOption" "TestEntity_questions_options" ON "TestEntity_questions_options"."questionId"="TestEntity_questions"."id"  LEFT JOIN "questionType" "TestEntity_questions_type" ON "TestEntity_questions_type"."id"="TestEntity_questions"."typeId"  LEFT JOIN "olympiadRound" "TestEntity__round" ON "TestEntity__round"."id"="TestEntity"."roundId"  LEFT JOIN "roundType" "TestEntity__round_type" ON "TestEntity__round_type"."id"="TestEntity__round"."typeId"  LEFT JOIN "olympiadYear" "TestEntity__round__year" ON "TestEntity__round__year"."id"="TestEntity__round"."yearId" WHERE ( "TestEntity"."id" = $1 ) AND ( "TestEntity"."id" IN (10000) ) -- PARAMETERS: [10000]
TestEntity {
  id: 10000,
  timeLimit: 5400,
  closed: true,
  lastModified: 2021-05-26T12:06:26.609Z,
  created: null,
  category: null,
  questions: [
    QuestionEntity {
      id: 1,
      task: 'Přečtěte si úryvek z něj a správně vyložte jeho poselství odpovědí:\n' +
        '\n' +
        '„...není kamene, na který by se městská naše rada neopovážila namířiti svou sekeru — ta Praha stále si není vědoma barbarského svého díla — pustoší a vandalizuje dál a není týdne, ba není dne, aby člověk se strachem nebral noviny do ruky, nedočte-li se tam zas, že nějaký "genius" za souhlasu celé rady povstal s novým návrhem a patronu svou vložiti hrozí i do těch míst, která po tolikerých bouřích a reptání považována byla za nedotknutelná...“\n',
      points: 2,
      orderNum: 1,
      img: null,
      lastModified: 2021-03-01T09:54:35.562Z,
      created: 2020-08-12T13:05:41.547Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 2,
      task: 'Prohlédni si práci českého ilustrátora 19. století Karla Krejčíka (1845-1901). Rozhodni, zda se jedná o:',
      points: 1,
      orderNum: 2,
      img: 'reklama-d291-d079.png',
      lastModified: 2020-08-23T18:59:11.713Z,
      created: 2020-08-12T13:13:49.277Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 3,
      task: 'Na dobové karikatuře vidíme Leopolda Hilsnera a Alfreda Dreyfuse.Rozhodni co tyto muže spojuje:',
      points: 1,
      orderNum: 3,
      img: 'hilsner-a7ae-1101c.jpg',
      lastModified: 2020-08-23T18:59:21.067Z,
      created: 2020-08-12T13:14:49.163Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 4,
      task: 'Prohlédni si schematickou mapu Rakouska-Uherska k roku 1910 a rozhodni, zda tvrzení je pravdivé (ANO) či nikoliv (NE).',
      points: 3,
      orderNum: 4,
      img: 'mapička-1c7a-97ca.jpg',
      lastModified: 2020-08-23T18:59:28.616Z,
      created: 2020-08-12T13:15:38.565Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 5,
      task: 'Od roku 1889 se na památku demonstrací dělníků v USA za zkrácení pracovní doby na 8 hodin pořádaly každý rok manifestace. V českých zemích se tento památný den slavil  od r. 1890  jako tzv. Svátek práce. Kdy se tento svátek slaví u nás v současnosti? (uveď den a měsíc).  ',
      points: 2,
      orderNum: 5,
      img: null,
      lastModified: 2020-08-12T13:16:59.703Z,
      created: 2020-08-12T13:16:51.620Z,
      options: [],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 6,
      task: 'Seřaďte obrázky tak, aby jejich pořadí odpovídalo pořadí slohů, ve kterých byly tyto budovy postaveny.\n' +
        'pořadí: secese - kubismus - novorenesance',
      points: 3,
      orderNum: 6,
      img: null,
      lastModified: 2020-08-12T13:17:18.456Z,
      created: 2020-08-12T13:17:07.094Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 13,
      task: 'Testova',
      points: 6,
      orderNum: 7,
      img: null,
      lastModified: 2021-02-28T16:02:43.495Z,
      created: 2020-09-25T08:01:40.684Z,
      options: [Array],
      type: [QuestionTypeEntity]
    },
    QuestionEntity {
      id: 7,
      task: 'Přečti si text od rakouského židovského spisovatele Stefana Zweiga (1881-1942) a rozhodni (zakroužkuj správnou odpověď), zda tvrzení pod textem vyplývají (ANO), či nevyplývají z textu(NE).\n' +
        '"Žilo se dobře, žilo se lehce a bezstarostně v té staré Vídni… Ve starém Rakousku se k sobě soupeři chovali spíše kavalírsky, v novinách nebo v parlamentu se sice osočovali, ale pak seděli po svých ciceronských tirádách titíž poslanci přátelsky u piva či kávy a tykali si; dokonce když se Lueger, vůdce antisemitské strany, stal starostou města, nezměnilo se v soukromém styku ani to nejmenší a já osobně musím vyznat, že jsem jako Žid nepocítil ani ve škole, ani na univerzitě, ani v literatuře tu nejmenší překážku nebo pohrdání. Z novin ještě na člověka nečišela nenávist jedné země ke druhé, jednoho národa k druhému, neoddělovala člověka od člověka, národ od národa…"\n',
      points: 5,
      orderNum: 8,
      img: null,
      lastModified: 2021-05-26T12:06:20.765Z,
      created: 2020-08-12T13:18:28.146Z,
      options: [Array],
      type: [QuestionTypeEntity]
    }
  ],
  round: null
}
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
query: SELECT "PostEntity"."id" AS "PostEntity_id", "PostEntity"."title" AS "PostEntity_title", "PostEntity"."content" AS "PostEntity_content", "PostEntity"."active" AS "PostEntity_active", "PostEntity"."lastModified" AS "PostEntity_lastModified", "PostEntity"."created" AS "PostEntity_created", "PostEntity"."authorId" AS "PostEntity_authorId", "PostEntity__author"."id" AS "PostEntity__author_id", "PostEntity__author"."username" AS "PostEntity__author_username", "PostEntity__author"."password" AS "PostEntity__author_password", "PostEntity__author"."email" AS "PostEntity__author_email", "PostEntity__author"."firstname" AS "PostEntity__author_firstname", "PostEntity__author"."surname" AS "PostEntity__author_surname" FROM "post" "PostEntity" LEFT JOIN "account" "PostEntity__author" ON "PostEntity__author"."id"="PostEntity"."authorId"
